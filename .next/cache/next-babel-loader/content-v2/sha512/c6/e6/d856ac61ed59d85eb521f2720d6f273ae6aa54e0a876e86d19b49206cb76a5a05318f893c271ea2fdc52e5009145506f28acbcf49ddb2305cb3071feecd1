{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/germanov/dev/weather/components/Hour/Hour.js\";\nimport { useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\nimport styles from '../../styles/Hour.module.css';\n\nconst Hour = props => {\n  const {\n    formatTime,\n    weatherIcon,\n    units,\n    windDirection\n  } = useContext(AppContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Hour,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: formatTime(props.time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: weatherIcon(props.icon)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [Math.round(props.temp), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Feels Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [Math.round(props.feels), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Chance of Rain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [Math.round(props.chance * 100), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Math.round(props.precip * 10), \" cm\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Math.round(props.humidity * 100), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `${windDirection(props.windBearing)} ${Math.round(props.windSpeed)} ${units == 'us' ? 'mph' : 'm/s'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Math.round(props.cloudCover * 100), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.uvIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Math.round(props.pressure), \" hPa\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Hour;","map":{"version":3,"sources":["/Users/germanov/dev/weather/components/Hour/Hour.js"],"names":["useContext","AppContext","styles","Hour","props","formatTime","weatherIcon","units","windDirection","time","icon","summary","Math","round","temp","feels","chance","precip","humidity","windBearing","windSpeed","cloudCover","uvIndex","pressure"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,WAAd;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAAoDR,UAAU,CACnEC,UADmE,CAApE;AAIA,sBACC;AAAK,IAAA,SAAS,EAAEC,MAAM,CAACC,IAAvB;AAAA,4BACC;AAAA,gBAAME,UAAU,CAACD,KAAK,CAACK,IAAP;AAAhB;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AAAA,gBAAMH,WAAW,CAACF,KAAK,CAACM,IAAP;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHD,eAKC;AAAA,gBAAMN,KAAK,CAACO;AAAZ;AAAA;AAAA;AAAA;AAAA,YALD,eAOC;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAGC;AAAA,mBAASC,IAAI,CAACC,KAAL,CAAWT,KAAK,CAACU,IAAjB,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YAPD,eAaC;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAGC;AAAA,mBAASF,IAAI,CAACC,KAAL,CAAWT,KAAK,CAACW,KAAjB,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YAbD,eAmBC;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,mBAASH,IAAI,CAACC,KAAL,CAAWT,KAAK,CAACY,MAAN,GAAe,GAA1B,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBD,eAwBC;AAAA,iBAAMJ,IAAI,CAACC,KAAL,CAAWT,KAAK,CAACa,MAAN,GAAe,EAA1B,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBD,eA0BC;AAAA,iBAAML,IAAI,CAACC,KAAL,CAAWT,KAAK,CAACc,QAAN,GAAiB,GAA5B,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BD,eA4BC;AAAA,gBACG,GAAEV,aAAa,CAACJ,KAAK,CAACe,WAAP,CAAoB,IAAGP,IAAI,CAACC,KAAL,CAAWT,KAAK,CAACgB,SAAjB,CAA4B,IACnEb,KAAK,IAAI,IAAT,GAAgB,KAAhB,GAAwB,KACxB;AAHF;AAAA;AAAA;AAAA;AAAA,YA5BD,eAkCC;AAAA,iBAAMK,IAAI,CAACC,KAAL,CAAWT,KAAK,CAACiB,UAAN,GAAmB,GAA9B,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCD,eAoCC;AAAA,gBAAMjB,KAAK,CAACkB;AAAZ;AAAA;AAAA;AAAA;AAAA,YApCD,eAsCC;AAAA,iBAAMV,IAAI,CAACC,KAAL,CAAWT,KAAK,CAACmB,QAAjB,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA0CA,CA/CD;;AAiDA,eAAepB,IAAf","sourcesContent":["import { useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\n\nimport styles from '../../styles/Hour.module.css';\n\nconst Hour = (props) => {\n\tconst { formatTime, weatherIcon, units, windDirection } = useContext(\n\t\tAppContext\n\t);\n\n\treturn (\n\t\t<div className={styles.Hour}>\n\t\t\t<div>{formatTime(props.time)}</div>\n\n\t\t\t<div>{weatherIcon(props.icon)}</div>\n\n\t\t\t<div>{props.summary}</div>\n\n\t\t\t<div>\n\t\t\t\t<span>Temperature</span>\n\n\t\t\t\t<strong>{Math.round(props.temp)}°</strong>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<span>Feels Like</span>\n\n\t\t\t\t<strong>{Math.round(props.feels)}°</strong>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<span>Chance of Rain</span>\n\t\t\t\t<strong>{Math.round(props.chance * 100)}%</strong>\n\t\t\t</div>\n\n\t\t\t<div>{Math.round(props.precip * 10)} cm</div>\n\n\t\t\t<div>{Math.round(props.humidity * 100)}%</div>\n\n\t\t\t<div>\n\t\t\t\t{`${windDirection(props.windBearing)} ${Math.round(props.windSpeed)} ${\n\t\t\t\t\tunits == 'us' ? 'mph' : 'm/s'\n\t\t\t\t}`}\n\t\t\t</div>\n\n\t\t\t<div>{Math.round(props.cloudCover * 100)}%</div>\n\n\t\t\t<div>{props.uvIndex}</div>\n\n\t\t\t<div>{Math.round(props.pressure)} hPa</div>\n\t\t</div>\n\t);\n};\n\nexport default Hour;\n"]},"metadata":{},"sourceType":"module"}