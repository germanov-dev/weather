{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useState, useEffect, useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\nimport styles from '../../styles/WeatherBlock.module.css';\nimport MainWeather from '../MainWeather/MainWeather';\nimport DaysWeather from '../DaysWeather/DaysWeather';\n\nvar Weather = function Weather() {\n  var _useContext = useContext(AppContext),\n      _long = _useContext[\"long\"],\n      lat = _useContext.lat,\n      units = _useContext.units,\n      setLoading = _useContext.setLoading,\n      location = _useContext.location,\n      setLocation = _useContext.setLocation,\n      reverseGeocoding = _useContext.reverseGeocoding,\n      setClassBackground = _useContext.setClassBackground;\n\n  useEffect(function () {\n    reverseGeocoding();\n    getLocationData();\n  }, [lat, _long, units]);\n\n  var getLocationData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var weatherAPI, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              weatherAPI = \"https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/\".concat(lat, \",\").concat(_long, \"?units=\").concat(units);\n              _context.next = 3;\n              return fetch(weatherAPI);\n\n            case 3:\n              response = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context.sent;\n              setLocation(data);\n              setClassBackground(data.currently.icon);\n              setLoading(false);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getLocationData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(\"main\", {\n    className: styles.WeatherBlock,\n    children: [/*#__PURE__*/_jsx(MainWeather, {\n      location: location\n    }), /*#__PURE__*/_jsx(DaysWeather, {\n      location: location\n    })]\n  });\n};\n\nexport default Weather;","map":null,"metadata":{},"sourceType":"module"}