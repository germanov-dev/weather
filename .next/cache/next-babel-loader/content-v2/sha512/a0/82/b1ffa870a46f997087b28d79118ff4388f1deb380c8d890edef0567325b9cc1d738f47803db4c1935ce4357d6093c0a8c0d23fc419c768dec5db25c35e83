{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/germanov/dev/weather/components/Weather/Weather.js\";\nimport { useState, useEffect, useContext } from 'react';\nimport Image from 'next/image';\nimport Day from '../Day/Day';\nimport styles from '../../styles/WeatherBlock.module.css';\nimport { AppContext } from '../../context/AppContext';\nimport Spinner from '../Spinner/Spinner';\n\nconst Weather = () => {\n  const {\n    long,\n    lat,\n    units\n  } = useContext(AppContext);\n  const {\n    0: location,\n    1: setLocation\n  } = useState();\n  const {\n    0: cityName,\n    1: setCityName\n  } = useState('');\n  const {\n    0: countryName,\n    1: setCountryName\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    reverseGeocoding();\n    getLocationData();\n  }, [lat, long, units]);\n\n  const getLocationData = async () => {\n    const weatherAPI = `https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=${units}`;\n    const response = await fetch(weatherAPI);\n\n    if (response.ok) {\n      const data = await response.json();\n      setLocation(data);\n      setLoading(false);\n      console.log(data);\n    }\n  };\n\n  const reverseGeocoding = async () => {\n    const reverseAPI = `https://api.opencagedata.com/geocode/v1/json?q=${lat}+${long}&key=d6d274c390434a5da83e82945466c21a`;\n    const response = await fetch(reverseAPI);\n\n    if (response.ok) {\n      const data = await response.json();\n\n      if (!data.results[0].components.city && !data.results[0].components.village) {\n        setCityName(data.results[0].components.town);\n        setCountryName(data.results[0].components.country);\n      }\n\n      if (!data.results[0].components.city && !data.results[0].components.town) {\n        setCityName(data.results[0].components.village);\n        setCountryName(data.results[0].components.country);\n      }\n\n      if (!data.results[0].components.town && !data.results[0].components.village) {\n        setCityName(data.results[0].components.city);\n        setCountryName(data.results[0].components.country);\n      }\n    }\n  };\n\n  const formatTime = timestamp => {\n    const date = new Date(timestamp * 1000);\n    const hours = date.getHours();\n    let minutes = date.getMinutes();\n    minutes = minutes <= 9 ? `0${minutes}` : minutes;\n    return `${hours}:${minutes}`;\n  };\n\n  const formatDate = timestamp => {\n    const date = new Date(timestamp * 1000);\n    const day = date.getDay();\n\n    switch (day) {\n      case 0:\n        return 'Sunday';\n\n      case 1:\n        return 'Monday';\n\n      case 2:\n        return 'Tuesday';\n\n      case 3:\n        return 'Wednesday';\n\n      case 4:\n        return 'Thursday';\n\n      case 5:\n        return 'Friday';\n\n      case 6:\n        return 'Saturday';\n\n      default:\n        return;\n    }\n  };\n\n  const windDirection = degrees => {\n    switch (true) {\n      case degrees >= 350 && degrees <= 360:\n        return 'N';\n\n      case degrees >= 0 && degrees <= 11:\n        return 'N';\n\n      case degrees >= 12 && degrees <= 34:\n        return 'NNE';\n\n      case degrees >= 35 && degrees <= 56:\n        return 'NE';\n\n      case degrees >= 57 && degrees <= 79:\n        return 'ENE';\n\n      case degrees >= 80 && degrees <= 101:\n        return 'E';\n\n      case degrees >= 102 && degrees <= 124:\n        return 'ESE';\n\n      case degrees >= 125 && degrees <= 146:\n        return 'SE';\n\n      case degrees >= 147 && degrees <= 169:\n        return 'SSE';\n\n      case degrees >= 170 && degrees <= 191:\n        return 'S';\n\n      case degrees >= 192 && degrees <= 214:\n        return 'SSW';\n\n      case degrees >= 215 && degrees <= 236:\n        return 'SW';\n\n      case degrees >= 237 && degrees <= 259:\n        return 'WSW';\n\n      case degrees >= 260 && degrees <= 281:\n        return 'W';\n\n      case degrees >= 282 && degrees <= 304:\n        return 'WNW';\n\n      case degrees >= 305 && degrees <= 326:\n        return 'NW';\n\n      case degrees >= 327 && degrees <= 349:\n        return 'NNW';\n\n      default:\n        break;\n    }\n  };\n\n  const weatherIcon = icon => {\n    switch (icon) {\n      case 'clear-day':\n        return /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/clear-day.svg\",\n          width: 150,\n          height: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 12\n        }, this);\n\n      case 'clear-night':\n        return /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/clear-night.svg\",\n          width: 150,\n          height: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 12\n        }, this);\n\n      case 'rain':\n        return /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/rain.svg\",\n          width: 150,\n          height: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 12\n        }, this);\n\n      case 'snow':\n        return /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/snow.svg\",\n          width: 150,\n          height: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 12\n        }, this);\n\n      case 'sleet':\n        return /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/sleet.svg\",\n          width: 150,\n          height: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 12\n        }, this);\n\n      case 'wind':\n        return /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/wind.svg\",\n          width: 150,\n          height: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 12\n        }, this);\n\n      case 'fog':\n        return /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/fog.svg\",\n          width: 150,\n          height: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 12\n        }, this);\n\n      case 'cloudy':\n        return /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/cloudy.svg\",\n          width: 150,\n          height: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 12\n        }, this);\n\n      case 'partly-cloudy-day':\n        return /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/partly-cloudy-day.svg\",\n          width: 150,\n          height: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 12\n        }, this);\n\n      case 'partly-cloudy-night':\n        return /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/partly-cloudy-night.svg\",\n          width: 150,\n          height: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 6\n        }, this);\n\n      case 'hail':\n        return /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/hail.svg\",\n          width: 150,\n          height: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 12\n        }, this);\n\n      case 'thunderstorm':\n        return /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/thunderstorm.svg\",\n          width: 150,\n          height: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 12\n        }, this);\n\n      case 'tornado':\n        return /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/tornado.svg\",\n          width: 150,\n          height: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 12\n        }, this);\n\n      default:\n        return;\n    }\n  };\n\n  const currentHolder = !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Location,\n        children: [cityName, \", \", countryName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Icon,\n        children: weatherIcon(location.currently.icon)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Summary,\n        children: location.currently.summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Temperature,\n        children: [Math.round(location.currently.temperature), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Sunrise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatTime(location.daily.data[0].sunriseTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Sunset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatTime(location.daily.data[0].sunsetTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Chance of Rain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(location.currently.precipProbability * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Humidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(location.currently.humidity * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Wind\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: windDirection(location.currently.windBearing)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 8\n            }, this), Math.round(location.currently.windSpeed), \" m/s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Feels Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(location.currently.apparentTemperature), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Precipation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(location.currently.precipIntensity * 10), \" cm\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Pressure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(location.currently.pressure), \" hPa\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(location.currently.visibility), \" km\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"UV Index\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: location.currently.uvIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 3\n  }, this);\n  const contentHolder = !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Days,\n      children: location.daily.data.map((day, index) => {\n        let dayOfWeek = formatDate(day.time);\n\n        if (index == 0) {\n          dayOfWeek = 'Today';\n        }\n\n        if (index == 1) {\n          dayOfWeek = 'Tomorrow';\n        }\n\n        return /*#__PURE__*/_jsxDEV(Day, {\n          day: dayOfWeek,\n          icon: weatherIcon(day.icon),\n          temperatureHigh: Math.round(day.temperatureHigh),\n          temperatureLow: Math.round(day.temperatureLow),\n          summary: day.summary\n        }, day.time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 4\n    }, this)\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.WeatherBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Current,\n      children: currentHolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Content,\n      children: contentHolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/germanov/dev/weather/components/Weather/Weather.js"],"names":["useState","useEffect","useContext","Image","Day","styles","AppContext","Spinner","Weather","long","lat","units","location","setLocation","cityName","setCityName","countryName","setCountryName","loading","setLoading","reverseGeocoding","getLocationData","weatherAPI","response","fetch","ok","data","json","console","log","reverseAPI","results","components","city","village","town","country","formatTime","timestamp","date","Date","hours","getHours","minutes","getMinutes","formatDate","day","getDay","windDirection","degrees","weatherIcon","icon","currentHolder","Location","Icon","currently","Summary","summary","Temperature","Math","round","temperature","daily","sunriseTime","sunsetTime","precipProbability","humidity","windBearing","windSpeed","apparentTemperature","precipIntensity","pressure","visibility","uvIndex","contentHolder","Days","map","index","dayOfWeek","time","temperatureHigh","temperatureLow","WeatherBlock","Current","Content"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport Image from 'next/image';\nimport Day from '../Day/Day';\nimport styles from '../../styles/WeatherBlock.module.css';\nimport { AppContext } from '../../context/AppContext';\nimport Spinner from '../Spinner/Spinner';\n\nconst Weather = () => {\n\tconst { long, lat, units } = useContext(AppContext);\n\tconst [location, setLocation] = useState();\n\tconst [cityName, setCityName] = useState('');\n\tconst [countryName, setCountryName] = useState('');\n\tconst [loading, setLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\treverseGeocoding();\n\t\tgetLocationData();\n\t}, [lat, long, units]);\n\n\tconst getLocationData = async () => {\n\t\tconst weatherAPI = `https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=${units}`;\n\t\tconst response = await fetch(weatherAPI);\n\n\t\tif (response.ok) {\n\t\t\tconst data = await response.json();\n\t\t\tsetLocation(data);\n\t\t\tsetLoading(false);\n\n\t\t\tconsole.log(data);\n\t\t}\n\t};\n\n\tconst reverseGeocoding = async () => {\n\t\tconst reverseAPI = `https://api.opencagedata.com/geocode/v1/json?q=${lat}+${long}&key=d6d274c390434a5da83e82945466c21a`;\n\t\tconst response = await fetch(reverseAPI);\n\n\t\tif (response.ok) {\n\t\t\tconst data = await response.json();\n\n\t\t\tif (\n\t\t\t\t!data.results[0].components.city &&\n\t\t\t\t!data.results[0].components.village\n\t\t\t) {\n\t\t\t\tsetCityName(data.results[0].components.town);\n\t\t\t\tsetCountryName(data.results[0].components.country);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!data.results[0].components.city &&\n\t\t\t\t!data.results[0].components.town\n\t\t\t) {\n\t\t\t\tsetCityName(data.results[0].components.village);\n\t\t\t\tsetCountryName(data.results[0].components.country);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!data.results[0].components.town &&\n\t\t\t\t!data.results[0].components.village\n\t\t\t) {\n\t\t\t\tsetCityName(data.results[0].components.city);\n\t\t\t\tsetCountryName(data.results[0].components.country);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst formatTime = (timestamp) => {\n\t\tconst date = new Date(timestamp * 1000);\n\t\tconst hours = date.getHours();\n\t\tlet minutes = date.getMinutes();\n\n\t\tminutes = minutes <= 9 ? `0${minutes}` : minutes;\n\n\t\treturn `${hours}:${minutes}`;\n\t};\n\n\tconst formatDate = (timestamp) => {\n\t\tconst date = new Date(timestamp * 1000);\n\t\tconst day = date.getDay();\n\n\t\tswitch (day) {\n\t\t\tcase 0:\n\t\t\t\treturn 'Sunday';\n\n\t\t\tcase 1:\n\t\t\t\treturn 'Monday';\n\n\t\t\tcase 2:\n\t\t\t\treturn 'Tuesday';\n\n\t\t\tcase 3:\n\t\t\t\treturn 'Wednesday';\n\n\t\t\tcase 4:\n\t\t\t\treturn 'Thursday';\n\n\t\t\tcase 5:\n\t\t\t\treturn 'Friday';\n\n\t\t\tcase 6:\n\t\t\t\treturn 'Saturday';\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t};\n\n\tconst windDirection = (degrees) => {\n\t\tswitch (true) {\n\t\t\tcase degrees >= 350 && degrees <= 360:\n\t\t\t\treturn 'N';\n\t\t\tcase degrees >= 0 && degrees <= 11:\n\t\t\t\treturn 'N';\n\t\t\tcase degrees >= 12 && degrees <= 34:\n\t\t\t\treturn 'NNE';\n\t\t\tcase degrees >= 35 && degrees <= 56:\n\t\t\t\treturn 'NE';\n\t\t\tcase degrees >= 57 && degrees <= 79:\n\t\t\t\treturn 'ENE';\n\t\t\tcase degrees >= 80 && degrees <= 101:\n\t\t\t\treturn 'E';\n\t\t\tcase degrees >= 102 && degrees <= 124:\n\t\t\t\treturn 'ESE';\n\t\t\tcase degrees >= 125 && degrees <= 146:\n\t\t\t\treturn 'SE';\n\t\t\tcase degrees >= 147 && degrees <= 169:\n\t\t\t\treturn 'SSE';\n\t\t\tcase degrees >= 170 && degrees <= 191:\n\t\t\t\treturn 'S';\n\t\t\tcase degrees >= 192 && degrees <= 214:\n\t\t\t\treturn 'SSW';\n\t\t\tcase degrees >= 215 && degrees <= 236:\n\t\t\t\treturn 'SW';\n\t\t\tcase degrees >= 237 && degrees <= 259:\n\t\t\t\treturn 'WSW';\n\t\t\tcase degrees >= 260 && degrees <= 281:\n\t\t\t\treturn 'W';\n\t\t\tcase degrees >= 282 && degrees <= 304:\n\t\t\t\treturn 'WNW';\n\t\t\tcase degrees >= 305 && degrees <= 326:\n\t\t\t\treturn 'NW';\n\t\t\tcase degrees >= 327 && degrees <= 349:\n\t\t\t\treturn 'NNW';\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst weatherIcon = (icon) => {\n\t\tswitch (icon) {\n\t\t\tcase 'clear-day':\n\t\t\t\treturn <Image src='/clear-day.svg' width={150} height={150} />;\n\t\t\tcase 'clear-night':\n\t\t\t\treturn <Image src='/clear-night.svg' width={150} height={150} />;\n\t\t\tcase 'rain':\n\t\t\t\treturn <Image src='/rain.svg' width={150} height={150} />;\n\t\t\tcase 'snow':\n\t\t\t\treturn <Image src='/snow.svg' width={150} height={150} />;\n\t\t\tcase 'sleet':\n\t\t\t\treturn <Image src='/sleet.svg' width={150} height={150} />;\n\t\t\tcase 'wind':\n\t\t\t\treturn <Image src='/wind.svg' width={150} height={150} />;\n\t\t\tcase 'fog':\n\t\t\t\treturn <Image src='/fog.svg' width={150} height={150} />;\n\t\t\tcase 'cloudy':\n\t\t\t\treturn <Image src='/cloudy.svg' width={150} height={150} />;\n\t\t\tcase 'partly-cloudy-day':\n\t\t\t\treturn <Image src='/partly-cloudy-day.svg' width={150} height={150} />;\n\t\t\tcase 'partly-cloudy-night':\n\t\t\t\treturn (\n\t\t\t\t\t<Image src='/partly-cloudy-night.svg' width={150} height={150} />\n\t\t\t\t);\n\t\t\tcase 'hail':\n\t\t\t\treturn <Image src='/hail.svg' width={150} height={150} />;\n\t\t\tcase 'thunderstorm':\n\t\t\t\treturn <Image src='/thunderstorm.svg' width={150} height={150} />;\n\t\t\tcase 'tornado':\n\t\t\t\treturn <Image src='/tornado.svg' width={150} height={150} />;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t};\n\n\tconst currentHolder = !loading ? (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t<div className={styles.Location}>\n\t\t\t\t\t{cityName}, {countryName}\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.Icon}>\n\t\t\t\t\t{weatherIcon(location.currently.icon)}\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.Summary}>{location.currently.summary}</div>\n\n\t\t\t\t<div className={styles.Temperature}>\n\t\t\t\t\t{Math.round(location.currently.temperature)}°\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Sunrise</span>\n\n\t\t\t\t\t\t<strong>{formatTime(location.daily.data[0].sunriseTime)}</strong>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Sunset</span>\n\n\t\t\t\t\t\t<strong>{formatTime(location.daily.data[0].sunsetTime)}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Chance of Rain</span>\n\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{Math.round(location.currently.precipProbability * 100)}%\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Humidity</span>\n\n\t\t\t\t\t\t<strong>{Math.round(location.currently.humidity * 100)}%</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Wind</span>\n\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t<span>{windDirection(location.currently.windBearing)}</span>\n\t\t\t\t\t\t\t{Math.round(location.currently.windSpeed)} m/s\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Feels Like</span>\n\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{Math.round(location.currently.apparentTemperature)}°\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Precipation</span>\n\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{Math.round(location.currently.precipIntensity * 10)} cm\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Pressure</span>\n\n\t\t\t\t\t\t<strong>{Math.round(location.currently.pressure)} hPa</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Visibility</span>\n\n\t\t\t\t\t\t<strong>{Math.round(location.currently.visibility)} km</strong>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>UV Index</span>\n\n\t\t\t\t\t\t<strong>{location.currently.uvIndex}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</>\n\t) : (\n\t\t<Spinner />\n\t);\n\n\tconst contentHolder = !loading ? (\n\t\t<>\n\t\t\t<div className={styles.Days}>\n\t\t\t\t{location.daily.data.map((day, index) => {\n\t\t\t\t\tlet dayOfWeek = formatDate(day.time);\n\n\t\t\t\t\tif (index == 0) {\n\t\t\t\t\t\tdayOfWeek = 'Today';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index == 1) {\n\t\t\t\t\t\tdayOfWeek = 'Tomorrow';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Day\n\t\t\t\t\t\t\tkey={day.time}\n\t\t\t\t\t\t\tday={dayOfWeek}\n\t\t\t\t\t\t\ticon={weatherIcon(day.icon)}\n\t\t\t\t\t\t\ttemperatureHigh={Math.round(day.temperatureHigh)}\n\t\t\t\t\t\t\ttemperatureLow={Math.round(day.temperatureLow)}\n\t\t\t\t\t\t\tsummary={day.summary}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</>\n\t) : (\n\t\t<Spinner />\n\t);\n\n\treturn (\n\t\t<main className={styles.WeatherBlock}>\n\t\t\t<div className={styles.Current}>{currentHolder}</div>\n\n\t\t\t<div className={styles.Content}>{contentHolder}</div>\n\t\t</main>\n\t);\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}