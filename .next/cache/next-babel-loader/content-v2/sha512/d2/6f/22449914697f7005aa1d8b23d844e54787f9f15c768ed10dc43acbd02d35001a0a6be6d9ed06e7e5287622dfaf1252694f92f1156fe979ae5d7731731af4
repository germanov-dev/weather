{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/germanov/dev/weather/components/Weather/Weather.js\";\nimport { useState, useEffect } from 'react';\n\nconst Weather = () => {\n  const {\n    0: long,\n    1: setLong\n  } = useState(27.9425864);\n  const {\n    0: lat,\n    1: setLat\n  } = useState(43.2152716);\n  const {\n    0: location,\n    1: setLocation\n  } = useState([]);\n  const {\n    0: locationName,\n    1: setLocationName\n  } = useState();\n  useEffect(() => {\n    getLocation();\n    console.log(location);\n  }, []);\n\n  const getLocation = async () => {\n    const proxy = 'https://cors-anywhere.herokuapp.com/';\n    const weatherAPI = `${proxy}https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=si&lang=bg`;\n    const response = await fetch(weatherAPI);\n    const data = await response.json();\n    setLocation(data);\n  };\n\n  const getLocationName = async () => {\n    const reverseLocation = `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${long}&zoom=18&addressdetails=1`;\n    const response = await fetch(reverseLocation);\n    const data = await response.json();\n    setLocationName(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"sidebar\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/germanov/dev/weather/components/Weather/Weather.js"],"names":["useState","useEffect","Weather","long","setLong","lat","setLat","location","setLocation","locationName","setLocationName","getLocation","console","log","proxy","weatherAPI","response","fetch","data","json","getLocationName","reverseLocation"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACrB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,CAAC,UAAD,CAAhC;AACA,QAAM;AAAA,OAACK,GAAD;AAAA,OAAMC;AAAN,MAAgBN,QAAQ,CAAC,UAAD,CAA9B;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACS,YAAD;AAAA,OAAeC;AAAf,MAAkCV,QAAQ,EAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,WAAW;AAEXC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMI,WAAW,GAAG,YAAY;AAC/B,UAAMG,KAAK,GAAG,sCAAd;AACA,UAAMC,UAAU,GAAI,GAAED,KAAM,qEAAoET,GAAI,IAAGF,IAAK,mBAA5G;AAEA,UAAMa,QAAQ,GAAG,MAAMC,KAAK,CAACF,UAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAX,IAAAA,WAAW,CAACU,IAAD,CAAX;AACA,GARD;;AAUA,QAAME,eAAe,GAAG,YAAY;AACnC,UAAMC,eAAe,GAAI,iEAAgEhB,GAAI,QAAOF,IAAK,2BAAzG;AAEA,UAAMa,QAAQ,GAAG,MAAMC,KAAK,CAACI,eAAD,CAA5B;AACA,UAAMH,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAT,IAAAA,eAAe,CAACQ,IAAD,CAAf;AACA,GAPD;;AASA,sBACC;AAAA,2BAGC;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAtCD;;AAwCA,eAAehB,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Weather = () => {\n\tconst [long, setLong] = useState(27.9425864);\n\tconst [lat, setLat] = useState(43.2152716);\n\tconst [location, setLocation] = useState([]);\n\tconst [locationName, setLocationName] = useState();\n\n\tuseEffect(() => {\n\t\tgetLocation();\n\n\t\tconsole.log(location);\n\t}, []);\n\n\tconst getLocation = async () => {\n\t\tconst proxy = 'https://cors-anywhere.herokuapp.com/';\n\t\tconst weatherAPI = `${proxy}https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=si&lang=bg`;\n\n\t\tconst response = await fetch(weatherAPI);\n\t\tconst data = await response.json();\n\n\t\tsetLocation(data);\n\t};\n\n\tconst getLocationName = async () => {\n\t\tconst reverseLocation = `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${long}&zoom=18&addressdetails=1`;\n\n\t\tconst response = await fetch(reverseLocation);\n\t\tconst data = await response.json();\n\n\t\tsetLocationName(data);\n\t};\n\n\treturn (\n\t\t<main>\n\t\t\t{/* <content>{location.map((location) => {})}</content> */}\n\n\t\t\t<sidebar></sidebar>\n\t\t</main>\n\t);\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}