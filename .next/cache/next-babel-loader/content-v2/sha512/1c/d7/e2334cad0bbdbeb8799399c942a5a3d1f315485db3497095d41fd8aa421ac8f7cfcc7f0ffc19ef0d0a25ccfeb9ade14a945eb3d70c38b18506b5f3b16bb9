{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/germanov/dev/weather/pages/[day].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { useRouter } from 'next/router';\nimport Spinner from '../Spinner/Spinner';\n\nvar DetailedWeather = function DetailedWeather() {\n  _s();\n\n  var _useContext = useContext(AppContext),\n      lat = _useContext.lat,\n      _long = _useContext[\"long\"],\n      units = _useContext.units;\n\n  var _useState = useState([]),\n      weather = _useState[0],\n      setWeather = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var router = useRouter();\n  var day = router.query.day;\n  useEffect(function () {\n    if (day != undefined) {\n      getDetailedWeather();\n    }\n  }, [day]);\n\n  var getDetailedWeather = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/\".concat(lat, \",\").concat(_long, \",\").concat(day));\n\n            case 2:\n              res = _context.sent;\n\n              if (!res.ok) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              setWeather(data);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getDetailedWeather() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var detailedWeather = !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: weather.daily.data[0].apparentTemperatureHigh\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, _this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: detailedWeather\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DetailedWeather, \"ppW0zFrFtNQ8ELal/lscvViQ7CM=\", false, function () {\n  return [useRouter];\n});\n\n_c = DetailedWeather;\nexport default DetailedWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedWeather\");","map":{"version":3,"sources":["/Users/germanov/dev/weather/pages/[day].js"],"names":["useContext","useEffect","useState","AppContext","useRouter","Spinner","DetailedWeather","lat","long","units","weather","setWeather","loading","setLoading","router","day","query","undefined","getDetailedWeather","fetch","res","ok","json","data","detailedWeather","daily","apparentTemperatureHigh"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAAA,oBACAN,UAAU,CAACG,UAAD,CADV;AAAA,MACrBI,GADqB,eACrBA,GADqB;AAAA,MAChBC,KADgB;AAAA,MACVC,KADU,eACVA,KADU;;AAAA,kBAECP,QAAQ,CAAC,EAAD,CAFT;AAAA,MAEtBQ,OAFsB;AAAA,MAEbC,UAFa;;AAAA,mBAGCT,QAAQ,CAAC,IAAD,CAHT;AAAA,MAGtBU,OAHsB;AAAA,MAGbC,UAHa;;AAI7B,MAAMC,MAAM,GAAGV,SAAS,EAAxB;AAJ6B,MAKrBW,GALqB,GAKbD,MAAM,CAACE,KALM,CAKrBD,GALqB;AAO7Bd,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIc,GAAG,IAAIE,SAAX,EAAsB;AACrBC,MAAAA,kBAAkB;AAClB;AACD,GAJQ,EAIN,CAACH,GAAD,CAJM,CAAT;;AAMA,MAAMG,kBAAkB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACRC,KAAK,6EAC+CZ,GAD/C,cACsDC,KADtD,cAC8DO,GAD9D,EADG;;AAAA;AACpBK,cAAAA,GADoB;;AAAA,mBAKtBA,GAAG,CAACC,EALkB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAMND,GAAG,CAACE,IAAJ,EANM;;AAAA;AAMnBC,cAAAA,IANmB;AAQzBZ,cAAAA,UAAU,CAACY,IAAD,CAAV;;AARyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAlBL,kBAAkB;AAAA;AAAA;AAAA,KAAxB;;AAYA,MAAMM,eAAe,GAAG,CAACZ,OAAD,gBACvB;AAAA,cAAMF,OAAO,CAACe,KAAR,CAAcF,IAAd,CAAmB,CAAnB,EAAsBG;AAA5B;AAAA;AAAA;AAAA;AAAA,WADuB,gBAGvB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,WAHD;AAMA,sBAAO;AAAA,cAAOF;AAAP;AAAA;AAAA;AAAA;AAAA,WAAP;AACA,CAhCD;;GAAMlB,e;UAIUF,S;;;KAJVE,e;AAkCN,eAAeA,eAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { useRouter } from 'next/router';\n\nimport Spinner from '../Spinner/Spinner';\n\nconst DetailedWeather = () => {\n\tconst { lat, long, units } = useContext(AppContext);\n\tconst [weather, setWeather] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst router = useRouter();\n\tconst { day } = router.query;\n\n\tuseEffect(() => {\n\t\tif (day != undefined) {\n\t\t\tgetDetailedWeather();\n\t\t}\n\t}, [day]);\n\n\tconst getDetailedWeather = async () => {\n\t\tconst res = await fetch(\n\t\t\t`https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long},${day}`\n\t\t);\n\n\t\tif (res.ok) {\n\t\t\tconst data = await res.json();\n\n\t\t\tsetWeather(data);\n\t\t}\n\t};\n\n\tconst detailedWeather = !loading ? (\n\t\t<div>{weather.daily.data[0].apparentTemperatureHigh}</div>\n\t) : (\n\t\t<Spinner />\n\t);\n\n\treturn <main>{detailedWeather}</main>;\n};\n\nexport default DetailedWeather;\n"]},"metadata":{},"sourceType":"module"}