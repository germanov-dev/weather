{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport Image from 'next/image';\nexport var AppContext = /*#__PURE__*/createContext();\n\nvar AppWrapper = function AppWrapper(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(23.319941),\n      _long = _useState[0],\n      setLong = _useState[1];\n\n  var _useState2 = useState(42.698334),\n      lat = _useState2[0],\n      setLat = _useState2[1];\n\n  var _useState3 = useState(''),\n      search = _useState3[0],\n      setSearch = _useState3[1];\n\n  var _useState4 = useState(''),\n      query = _useState4[0],\n      setQuery = _useState4[1];\n\n  var _useState5 = useState([]),\n      dropdownItems = _useState5[0],\n      setDropdownItems = _useState5[1];\n\n  var _useState6 = useState(false),\n      dropdownLoading = _useState6[0],\n      setDropdownLoading = _useState6[1];\n\n  var _useState7 = useState('si'),\n      units = _useState7[0],\n      setUnits = _useState7[1];\n\n  var _useState8 = useState(true),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(''),\n      countryName = _useState9[0],\n      setCountryName = _useState9[1];\n\n  var _useState10 = useState(''),\n      cityName = _useState10[0],\n      setCityName = _useState10[1];\n\n  var _useState11 = useState(),\n      location = _useState11[0],\n      setLocation = _useState11[1];\n\n  var _useState12 = useState([]),\n      weather = _useState12[0],\n      setWeather = _useState12[1];\n\n  var _useState13 = useState(),\n      classBackground = _useState13[0],\n      setClassBackground = _useState13[1];\n\n  var _useState14 = useState({\n    color: '#B2FEFA',\n    gradient: 'linear-gradient(to top, #0ED2F7, #B2FEFA)'\n  }),\n      backgroundStyle = _useState14[0],\n      setBackgroundStyle = _useState14[1];\n\n  useEffect(function () {\n    if (!query == '') {\n      forwardGeocoding();\n    }\n  }, [query]);\n\n  var getUserLocation = function getUserLocation() {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLong(position.coords.longitude);\n      setLat(position.coords.latitude);\n    });\n  };\n\n  var updateSearch = function updateSearch(event) {\n    setSearch(event.target.value);\n  };\n\n  var getSearch = function getSearch(event) {\n    event.preventDefault();\n    setQuery(search);\n    setDropdownLoading(true);\n  };\n\n  var updateCheckbox = function updateCheckbox(event) {\n    if (event.target.checked == true) {\n      setUnits('us');\n    } else {\n      setUnits('si');\n    }\n  };\n\n  var reverseGeocoding = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var reverseAPI, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              reverseAPI = \"https://api.opencagedata.com/geocode/v1/json?q=\".concat(lat, \"+\").concat(_long, \"&key=d6d274c390434a5da83e82945466c21a\");\n              _context.next = 3;\n              return fetch(reverseAPI);\n\n            case 3:\n              response = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context.sent;\n\n              if (!data.results[0].components.city && !data.results[0].components.village) {\n                setCityName(data.results[0].components.town);\n                setCountryName(data.results[0].components.country);\n              }\n\n              if (!data.results[0].components.city && !data.results[0].components.town) {\n                setCityName(data.results[0].components.village);\n                setCountryName(data.results[0].components.country);\n              }\n\n              if (!data.results[0].components.town && !data.results[0].components.village) {\n                setCityName(data.results[0].components.city);\n                setCountryName(data.results[0].components.country);\n              }\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function reverseGeocoding() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var forwardGeocoding = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var forwardAPI, response, data, filteredResults, newResults;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              forwardAPI = \"https://api.opencagedata.com/geocode/v1/json?q=\".concat(query, \"&key=d6d274c390434a5da83e82945466c21a\");\n              _context2.next = 3;\n              return fetch(forwardAPI);\n\n            case 3:\n              response = _context2.sent;\n\n              if (!response.ok) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context2.sent;\n              filteredResults = data.results.filter(function (result) {\n                return result.components._type == 'town' || result.components._type == 'city' || result.components._type == 'village';\n              });\n              newResults = filteredResults.filter(function (result) {\n                return result.components.town != undefined || result.components.village != undefined || result.components.city != undefined;\n              });\n              setDropdownItems(newResults);\n              setDropdownLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function forwardGeocoding() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var weatherIcon = function weatherIcon(icon) {\n    switch (icon) {\n      case 'clear-day':\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/clear-day.svg\",\n          width: 150,\n          height: 150\n        });\n\n      case 'clear-night':\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/clear-night.svg\",\n          width: 150,\n          height: 150\n        });\n\n      case 'rain':\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/rain.svg\",\n          width: 150,\n          height: 150\n        });\n\n      case 'snow':\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/snow.svg\",\n          width: 150,\n          height: 150\n        });\n\n      case 'sleet':\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/sleet.svg\",\n          width: 150,\n          height: 150\n        });\n\n      case 'wind':\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/wind.svg\",\n          width: 150,\n          height: 150\n        });\n\n      case 'fog':\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/fog.svg\",\n          width: 150,\n          height: 150\n        });\n\n      case 'cloudy':\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/cloudy.svg\",\n          width: 150,\n          height: 150\n        });\n\n      case 'partly-cloudy-day':\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/partly-cloudy-day.svg\",\n          width: 150,\n          height: 150\n        });\n\n      case 'partly-cloudy-night':\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/partly-cloudy-night.svg\",\n          width: 150,\n          height: 150\n        });\n\n      case 'hail':\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/hail.svg\",\n          width: 150,\n          height: 150\n        });\n\n      case 'thunderstorm':\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/thunderstorm.svg\",\n          width: 150,\n          height: 150\n        });\n\n      case 'tornado':\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/tornado.svg\",\n          width: 150,\n          height: 150\n        });\n\n      default:\n        return;\n    }\n  };\n\n  var formatTime = function formatTime(timestamp) {\n    var date = new Date(timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    minutes = minutes <= 9 ? \"0\".concat(minutes) : minutes;\n    return \"\".concat(hours, \":\").concat(minutes);\n  };\n\n  var windDirection = function windDirection(degrees) {\n    switch (true) {\n      case degrees >= 350 && degrees <= 360:\n        return 'N';\n\n      case degrees >= 0 && degrees <= 11:\n        return 'N';\n\n      case degrees >= 12 && degrees <= 34:\n        return 'NNE';\n\n      case degrees >= 35 && degrees <= 56:\n        return 'NE';\n\n      case degrees >= 57 && degrees <= 79:\n        return 'ENE';\n\n      case degrees >= 80 && degrees <= 101:\n        return 'E';\n\n      case degrees >= 102 && degrees <= 124:\n        return 'ESE';\n\n      case degrees >= 125 && degrees <= 146:\n        return 'SE';\n\n      case degrees >= 147 && degrees <= 169:\n        return 'SSE';\n\n      case degrees >= 170 && degrees <= 191:\n        return 'S';\n\n      case degrees >= 192 && degrees <= 214:\n        return 'SSW';\n\n      case degrees >= 215 && degrees <= 236:\n        return 'SW';\n\n      case degrees >= 237 && degrees <= 259:\n        return 'WSW';\n\n      case degrees >= 260 && degrees <= 281:\n        return 'W';\n\n      case degrees >= 282 && degrees <= 304:\n        return 'WNW';\n\n      case degrees >= 305 && degrees <= 326:\n        return 'NW';\n\n      case degrees >= 327 && degrees <= 349:\n        return 'NNW';\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsx(AppContext.Provider, {\n    value: {\n      \"long\": _long,\n      setLong: setLong,\n      lat: lat,\n      setLat: setLat,\n      search: search,\n      setSearch: setSearch,\n      query: query,\n      setQuery: setQuery,\n      getUserLocation: getUserLocation,\n      updateSearch: updateSearch,\n      getSearch: getSearch,\n      dropdownItems: dropdownItems,\n      dropdownLoading: dropdownLoading,\n      setDropdownLoading: setDropdownLoading,\n      units: units,\n      setUnits: setUnits,\n      updateCheckbox: updateCheckbox,\n      loading: loading,\n      setLoading: setLoading,\n      countryName: countryName,\n      setCountryName: setCountryName,\n      cityName: cityName,\n      setCityName: setCityName,\n      location: location,\n      setLocation: setLocation,\n      weatherIcon: weatherIcon,\n      reverseGeocoding: reverseGeocoding,\n      formatTime: formatTime,\n      windDirection: windDirection,\n      weather: weather,\n      setWeather: setWeather,\n      classBackground: classBackground,\n      setClassBackground: setClassBackground,\n      backgroundStyle: backgroundStyle,\n      setBackgroundStyle: setBackgroundStyle\n    },\n    children: children\n  });\n};\n\nexport default AppWrapper;","map":null,"metadata":{},"sourceType":"module"}