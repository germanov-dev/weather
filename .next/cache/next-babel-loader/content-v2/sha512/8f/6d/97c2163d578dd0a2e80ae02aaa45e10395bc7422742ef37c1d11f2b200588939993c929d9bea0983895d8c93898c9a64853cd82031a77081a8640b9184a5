{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/germanov/dev/weather/pages/[day].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { useRouter } from 'next/router';\nimport MainWeather from '../components/MainWeather/MainWeather';\nimport DaysWeather from '../components/DaysWeather/DaysWeather';\n\nvar DetailedWeather = function DetailedWeather() {\n  _s();\n\n  var _useContext = useContext(AppContext),\n      lat = _useContext.lat,\n      _long = _useContext[\"long\"],\n      units = _useContext.units,\n      weatherIcon = _useContext.weatherIcon;\n\n  var _useState = useState([]),\n      weather = _useState[0],\n      setWeather = _useState[1];\n\n  var router = useRouter();\n  var day = router.query.day;\n  useEffect(function () {\n    getDetailedWeather();\n  }, [day]);\n\n  var getDetailedWeather = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/\".concat(lat, \",\").concat(_long, \",\").concat(day));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n              setWeather(data);\n              console.log(data);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getDetailedWeather() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(MainWeather, {\n      location: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(DaysWeather, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(DetailedWeather, \"IpDYn8Yxr1LEV4cmt59EQ1qXMp8=\", false, function () {\n  return [useRouter];\n});\n\n_c = DetailedWeather;\nexport default DetailedWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedWeather\");","map":{"version":3,"sources":["/Users/germanov/dev/weather/pages/[day].js"],"names":["useContext","useEffect","useState","AppContext","useRouter","MainWeather","DaysWeather","DetailedWeather","lat","long","units","weatherIcon","weather","setWeather","router","day","query","getDetailedWeather","fetch","res","json","data","console","log"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAAA,oBACaP,UAAU,CAACG,UAAD,CADvB;AAAA,MACrBK,GADqB,eACrBA,GADqB;AAAA,MAChBC,KADgB;AAAA,MACVC,KADU,eACVA,KADU;AAAA,MACHC,WADG,eACHA,WADG;;AAAA,kBAECT,QAAQ,CAAC,EAAD,CAFT;AAAA,MAEtBU,OAFsB;AAAA,MAEbC,UAFa;;AAG7B,MAAMC,MAAM,GAAGV,SAAS,EAAxB;AAH6B,MAIrBW,GAJqB,GAIbD,MAAM,CAACE,KAJM,CAIrBD,GAJqB;AAM7Bd,EAAAA,SAAS,CAAC,YAAM;AACfgB,IAAAA,kBAAkB;AAClB,GAFQ,EAEN,CAACF,GAAD,CAFM,CAAT;;AAIA,MAAME,kBAAkB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACRC,KAAK,6EAC+CV,GAD/C,cACsDC,KADtD,cAC8DM,GAD9D,EADG;;AAAA;AACpBI,cAAAA,GADoB;AAAA;AAAA,qBAIPA,GAAG,CAACC,IAAJ,EAJO;;AAAA;AAIpBC,cAAAA,IAJoB;AAM1BR,cAAAA,UAAU,CAACQ,IAAD,CAAV;AAEAC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAR0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAlBJ,kBAAkB;AAAA;AAAA;AAAA,KAAxB;;AAWA,sBACC;AAAA,4BACC,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEL;AAAvB;AAAA;AAAA;AAAA;AAAA,aADD,eAGC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAHD;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AAOA,CA5BD;;GAAML,e;UAGUH,S;;;KAHVG,e;AA8BN,eAAeA,eAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { useRouter } from 'next/router';\n\nimport MainWeather from '../components/MainWeather/MainWeather';\nimport DaysWeather from '../components/DaysWeather/DaysWeather';\n\nconst DetailedWeather = () => {\n\tconst { lat, long, units, weatherIcon } = useContext(AppContext);\n\tconst [weather, setWeather] = useState([]);\n\tconst router = useRouter();\n\tconst { day } = router.query;\n\n\tuseEffect(() => {\n\t\tgetDetailedWeather();\n\t}, [day]);\n\n\tconst getDetailedWeather = async () => {\n\t\tconst res = await fetch(\n\t\t\t`https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long},${day}`\n\t\t);\n\t\tconst data = await res.json();\n\n\t\tsetWeather(data);\n\n\t\tconsole.log(data);\n\t};\n\n\treturn (\n\t\t<main>\n\t\t\t<MainWeather location={weather} />\n\n\t\t\t<DaysWeather />\n\t\t</main>\n\t);\n};\n\nexport default DetailedWeather;\n"]},"metadata":{},"sourceType":"module"}