{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/germanov/dev/weather/components/DaysWeather/DaysWeather.js\";\nimport { useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\nimport styles from '../../styles/DaysWeather.module.css';\nimport Spinner from '../Spinner/Spinner';\nimport Day from '../Day/Day';\n\nconst DaysWeather = props => {\n  const {\n    loading,\n    weatherIcon\n  } = useContext(AppContext);\n\n  const formatDate = timestamp => {\n    const date = new Date(timestamp * 1000);\n    const day = date.getDay();\n\n    switch (day) {\n      case 0:\n        return 'Sunday';\n\n      case 1:\n        return 'Monday';\n\n      case 2:\n        return 'Tuesday';\n\n      case 3:\n        return 'Wednesday';\n\n      case 4:\n        return 'Thursday';\n\n      case 5:\n        return 'Friday';\n\n      case 6:\n        return 'Saturday';\n\n      default:\n        return;\n    }\n  };\n\n  const daysWeather = !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Content,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Days,\n      children: props.location.daily.data.map((day, index) => {\n        let dayOfWeek = formatDate(day.time);\n\n        if (index == 0) {\n          dayOfWeek = 'Today';\n        }\n\n        if (index == 1) {\n          dayOfWeek = 'Tomorrow';\n        }\n\n        return /*#__PURE__*/_jsxDEV(Day, {\n          id: day.time,\n          day: dayOfWeek,\n          icon: weatherIcon(day.icon),\n          temperatureHigh: Math.round(day.temperatureHigh),\n          temperatureLow: Math.round(day.temperatureLow),\n          summary: day.summary,\n          precipProbability: day.precipProbability\n        }, day.time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Content,\n    children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: daysWeather\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\nexport default DaysWeather;","map":{"version":3,"sources":["/Users/germanov/dev/weather/components/DaysWeather/DaysWeather.js"],"names":["useContext","AppContext","styles","Spinner","Day","DaysWeather","props","loading","weatherIcon","formatDate","timestamp","date","Date","day","getDay","daysWeather","Content","Days","location","daily","data","map","index","dayOfWeek","time","icon","Math","round","temperatureHigh","temperatureLow","summary","precipProbability"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,MAAP,MAAmB,qCAAnB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA2BR,UAAU,CAACC,UAAD,CAA3C;;AAEA,QAAMQ,UAAU,GAAIC,SAAD,IAAe;AACjC,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,SAAS,GAAG,IAArB,CAAb;AACA,UAAMG,GAAG,GAAGF,IAAI,CAACG,MAAL,EAAZ;;AAEA,YAAQD,GAAR;AACC,WAAK,CAAL;AACC,eAAO,QAAP;;AAED,WAAK,CAAL;AACC,eAAO,QAAP;;AAED,WAAK,CAAL;AACC,eAAO,SAAP;;AAED,WAAK,CAAL;AACC,eAAO,WAAP;;AAED,WAAK,CAAL;AACC,eAAO,UAAP;;AAED,WAAK,CAAL;AACC,eAAO,QAAP;;AAED,WAAK,CAAL;AACC,eAAO,UAAP;;AACD;AACC;AAtBF;AAwBA,GA5BD;;AA8BA,QAAME,WAAW,GAAG,CAACR,OAAD,gBACnB;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACc,OAAvB;AAAA,2BACC;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACe,IAAvB;AAAA,gBACEX,KAAK,CAACY,QAAN,CAAeC,KAAf,CAAqBC,IAArB,CAA0BC,GAA1B,CAA8B,CAACR,GAAD,EAAMS,KAAN,KAAgB;AAC9C,YAAIC,SAAS,GAAGd,UAAU,CAACI,GAAG,CAACW,IAAL,CAA1B;;AAEA,YAAIF,KAAK,IAAI,CAAb,EAAgB;AACfC,UAAAA,SAAS,GAAG,OAAZ;AACA;;AAED,YAAID,KAAK,IAAI,CAAb,EAAgB;AACfC,UAAAA,SAAS,GAAG,UAAZ;AACA;;AAED,4BACC,QAAC,GAAD;AAEC,UAAA,EAAE,EAAEV,GAAG,CAACW,IAFT;AAGC,UAAA,GAAG,EAAED,SAHN;AAIC,UAAA,IAAI,EAAEf,WAAW,CAACK,GAAG,CAACY,IAAL,CAJlB;AAKC,UAAA,eAAe,EAAEC,IAAI,CAACC,KAAL,CAAWd,GAAG,CAACe,eAAf,CALlB;AAMC,UAAA,cAAc,EAAEF,IAAI,CAACC,KAAL,CAAWd,GAAG,CAACgB,cAAf,CANjB;AAOC,UAAA,OAAO,EAAEhB,GAAG,CAACiB,OAPd;AAQsB,UAAA,iBAAiB,EAAEjB,GAAG,CAACkB;AAR7C,WACMlB,GAAG,CAACW,IADV;AAAA;AAAA;AAAA;AAAA,gBADD;AAYA,OAvBA;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADmB,gBA8BnB;AAAK,IAAA,SAAS,EAAEtB,MAAM,CAACc,OAAvB;AAAA,2BACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UA9BD;AAmCA,sBAAO;AAAA,cAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CArED;;AAuEA,eAAeV,WAAf","sourcesContent":["import { useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\n\nimport styles from '../../styles/DaysWeather.module.css';\n\nimport Spinner from '../Spinner/Spinner';\nimport Day from '../Day/Day';\n\nconst DaysWeather = (props) => {\n\tconst { loading, weatherIcon } = useContext(AppContext);\n\n\tconst formatDate = (timestamp) => {\n\t\tconst date = new Date(timestamp * 1000);\n\t\tconst day = date.getDay();\n\n\t\tswitch (day) {\n\t\t\tcase 0:\n\t\t\t\treturn 'Sunday';\n\n\t\t\tcase 1:\n\t\t\t\treturn 'Monday';\n\n\t\t\tcase 2:\n\t\t\t\treturn 'Tuesday';\n\n\t\t\tcase 3:\n\t\t\t\treturn 'Wednesday';\n\n\t\t\tcase 4:\n\t\t\t\treturn 'Thursday';\n\n\t\t\tcase 5:\n\t\t\t\treturn 'Friday';\n\n\t\t\tcase 6:\n\t\t\t\treturn 'Saturday';\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t};\n\n\tconst daysWeather = !loading ? (\n\t\t<div className={styles.Content}>\n\t\t\t<div className={styles.Days}>\n\t\t\t\t{props.location.daily.data.map((day, index) => {\n\t\t\t\t\tlet dayOfWeek = formatDate(day.time);\n\n\t\t\t\t\tif (index == 0) {\n\t\t\t\t\t\tdayOfWeek = 'Today';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index == 1) {\n\t\t\t\t\t\tdayOfWeek = 'Tomorrow';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Day\n\t\t\t\t\t\t\tkey={day.time}\n\t\t\t\t\t\t\tid={day.time}\n\t\t\t\t\t\t\tday={dayOfWeek}\n\t\t\t\t\t\t\ticon={weatherIcon(day.icon)}\n\t\t\t\t\t\t\ttemperatureHigh={Math.round(day.temperatureHigh)}\n\t\t\t\t\t\t\ttemperatureLow={Math.round(day.temperatureLow)}\n\t\t\t\t\t\t\tsummary={day.summary}\n                            precipProbability={day.precipProbability}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t) : (\n\t\t<div className={styles.Content}>\n\t\t\t<Spinner />\n\t\t</div>\n\t);\n\n\treturn <div>{daysWeather}</div>;\n};\n\nexport default DaysWeather;\n"]},"metadata":{},"sourceType":"module"}