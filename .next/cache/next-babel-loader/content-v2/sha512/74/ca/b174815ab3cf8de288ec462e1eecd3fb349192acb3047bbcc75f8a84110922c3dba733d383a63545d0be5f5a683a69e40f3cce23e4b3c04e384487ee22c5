{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/germanov/dev/weather/components/Dropdown/Dropdown.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\nimport styles from '../../styles/Dropdown.module.css';\nimport DropdownItem from './DropdownItem/DropdownItem';\nimport Spinner from '../Spinner/Spinner';\n\nvar Dropdown = function Dropdown(props) {\n  _s();\n\n  var _useContext = useContext(AppContext),\n      setDropdownLoading = _useContext.setDropdownLoading;\n\n  var dropdownContent = props.dropdownLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, _this) : props.dropdownItems.map(function (item) {\n    var type = item.components._type;\n    setDropdownLoading(false);\n\n    if (type == 'city' && item.components[type] != undefined || type == 'village' && item.components[type] != undefined || type == 'town' && item.components[type] != undefined) {\n      return /*#__PURE__*/_jsxDEV(DropdownItem, {\n        flag: item.annotations.flag,\n        city: item.components[type],\n        country: item.components.country,\n        continent: item.components.continent,\n        lat: item.geometry.lat,\n        lng: item.geometry.lng,\n        clicked: props.clicked\n      }, item.annotations.Maidenhead, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }, _this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Dropdown,\n    children: dropdownContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Dropdown, \"QMuTC3uqrPEswZDfrkrWqpsID6w=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Users/germanov/dev/weather/components/Dropdown/Dropdown.js"],"names":["useContext","AppContext","styles","DropdownItem","Spinner","Dropdown","props","setDropdownLoading","dropdownContent","dropdownLoading","dropdownItems","map","item","type","components","_type","undefined","annotations","flag","country","continent","geometry","lat","lng","clicked","Maidenhead"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA;;AAAA,oBACIN,UAAU,CAACC,UAAD,CADd;AAAA,MACnBM,kBADmB,eACnBA,kBADmB;;AAG3B,MAAIC,eAAe,GAAGF,KAAK,CAACG,eAAN,gBACrB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,WADqB,GAGrBH,KAAK,CAACI,aAAN,CAAoBC,GAApB,CAAwB,UAACC,IAAD,EAAU;AACjC,QAAMC,IAAI,GAAGD,IAAI,CAACE,UAAL,CAAgBC,KAA7B;AACAR,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;;AAEA,QACEM,IAAI,IAAI,MAAR,IAAkBD,IAAI,CAACE,UAAL,CAAgBD,IAAhB,KAAyBG,SAA5C,IACCH,IAAI,IAAI,SAAR,IAAqBD,IAAI,CAACE,UAAL,CAAgBD,IAAhB,KAAyBG,SAD/C,IAECH,IAAI,IAAI,MAAR,IAAkBD,IAAI,CAACE,UAAL,CAAgBD,IAAhB,KAAyBG,SAH7C,EAIE;AACD,0BACC,QAAC,YAAD;AAEC,QAAA,IAAI,EAAEJ,IAAI,CAACK,WAAL,CAAiBC,IAFxB;AAGC,QAAA,IAAI,EAAEN,IAAI,CAACE,UAAL,CAAgBD,IAAhB,CAHP;AAIC,QAAA,OAAO,EAAED,IAAI,CAACE,UAAL,CAAgBK,OAJ1B;AAKC,QAAA,SAAS,EAAEP,IAAI,CAACE,UAAL,CAAgBM,SAL5B;AAMC,QAAA,GAAG,EAAER,IAAI,CAACS,QAAL,CAAcC,GANpB;AAOC,QAAA,GAAG,EAAEV,IAAI,CAACS,QAAL,CAAcE,GAPpB;AAQC,QAAA,OAAO,EAAEjB,KAAK,CAACkB;AARhB,SACMZ,IAAI,CAACK,WAAL,CAAiBQ,UADvB;AAAA;AAAA;AAAA;AAAA,eADD;AAYA;AACD,GAtBD,CAHD;AA4BA,sBAAO;AAAK,IAAA,SAAS,EAAEvB,MAAM,CAACG,QAAvB;AAAA,cAAkCG;AAAlC;AAAA;AAAA;AAAA;AAAA,WAAP;AACA,CAhCD;;GAAMH,Q;;KAAAA,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import { useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\n\nimport styles from '../../styles/Dropdown.module.css';\nimport DropdownItem from './DropdownItem/DropdownItem';\nimport Spinner from '../Spinner/Spinner';\n\nconst Dropdown = (props) => {\n\tconst { setDropdownLoading } = useContext(AppContext);\n\n\tlet dropdownContent = props.dropdownLoading ? (\n\t\t<Spinner />\n\t) : (\n\t\tprops.dropdownItems.map((item) => {\n\t\t\tconst type = item.components._type;\n\t\t\tsetDropdownLoading(false);\n\n\t\t\tif (\n\t\t\t\t(type == 'city' && item.components[type] != undefined) ||\n\t\t\t\t(type == 'village' && item.components[type] != undefined) ||\n\t\t\t\t(type == 'town' && item.components[type] != undefined)\n\t\t\t) {\n\t\t\t\treturn (\n\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\tkey={item.annotations.Maidenhead}\n\t\t\t\t\t\tflag={item.annotations.flag}\n\t\t\t\t\t\tcity={item.components[type]}\n\t\t\t\t\t\tcountry={item.components.country}\n\t\t\t\t\t\tcontinent={item.components.continent}\n\t\t\t\t\t\tlat={item.geometry.lat}\n\t\t\t\t\t\tlng={item.geometry.lng}\n\t\t\t\t\t\tclicked={props.clicked}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t})\n\t);\n\n\treturn <div className={styles.Dropdown}>{dropdownContent}</div>;\n};\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}