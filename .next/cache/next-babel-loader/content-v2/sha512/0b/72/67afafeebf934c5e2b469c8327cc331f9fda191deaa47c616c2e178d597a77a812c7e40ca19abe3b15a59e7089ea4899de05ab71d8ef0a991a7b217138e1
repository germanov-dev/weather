{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/germanov/dev/weather/components/Weather/Weather.js\";\nimport { useState, useEffect, useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\nimport styles from '../../styles/WeatherBlock.module.css';\nimport MainWeather from '../MainWeather/MainWeather';\nimport DaysWeather from '../DaysWeather/DaysWeather';\n\nconst Weather = () => {\n  const {\n    long,\n    lat,\n    units,\n    setLoading,\n    location,\n    setLocation,\n    reverseGeocoding,\n    iconClassBackground\n  } = useContext(AppContext);\n  useEffect(() => {\n    reverseGeocoding();\n    getLocationData();\n  }, [lat, long, units]);\n\n  const getLocationData = async () => {\n    const weatherAPI = `https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=${units}`;\n    const response = await fetch(weatherAPI);\n\n    if (response.ok) {\n      const data = await response.json();\n      setLocation(data);\n      setClassBackground(data.currently.icon);\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.WeatherBlock,\n    children: [/*#__PURE__*/_jsxDEV(MainWeather, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(DaysWeather, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/germanov/dev/weather/components/Weather/Weather.js"],"names":["useState","useEffect","useContext","AppContext","styles","MainWeather","DaysWeather","Weather","long","lat","units","setLoading","location","setLocation","reverseGeocoding","iconClassBackground","getLocationData","weatherAPI","response","fetch","ok","data","json","setClassBackground","currently","icon","WeatherBlock"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACrB,QAAM;AACLC,IAAAA,IADK;AAELC,IAAAA,GAFK;AAGLC,IAAAA,KAHK;AAILC,IAAAA,UAJK;AAKLC,IAAAA,QALK;AAMLC,IAAAA,WANK;AAOLC,IAAAA,gBAPK;AAQLC,IAAAA;AARK,MASFb,UAAU,CAACC,UAAD,CATd;AAWAF,EAAAA,SAAS,CAAC,MAAM;AACfa,IAAAA,gBAAgB;AAChBE,IAAAA,eAAe;AACf,GAHQ,EAGN,CAACP,GAAD,EAAMD,IAAN,EAAYE,KAAZ,CAHM,CAAT;;AAKA,QAAMM,eAAe,GAAG,YAAY;AACnC,UAAMC,UAAU,GAAI,qEAAoER,GAAI,IAAGD,IAAK,UAASE,KAAM,EAAnH;AACA,UAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACF,UAAD,CAA5B;;AAEA,QAAIC,QAAQ,CAACE,EAAb,EAAiB;AAChB,YAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAT,MAAAA,WAAW,CAACQ,IAAD,CAAX;AACAE,MAAAA,kBAAkB,CAACF,IAAI,CAACG,SAAL,CAAeC,IAAhB,CAAlB;AACAd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD,GAVD;;AAYA,sBACC;AAAM,IAAA,SAAS,EAAEP,MAAM,CAACsB,YAAxB;AAAA,4BACC,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEd;AAAvB;AAAA;AAAA;AAAA;AAAA,YADD,eAGC,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CApCD;;AAsCA,eAAeL,OAAf","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\n\nimport styles from '../../styles/WeatherBlock.module.css';\n\nimport MainWeather from '../MainWeather/MainWeather';\nimport DaysWeather from '../DaysWeather/DaysWeather';\n\nconst Weather = () => {\n\tconst {\n\t\tlong,\n\t\tlat,\n\t\tunits,\n\t\tsetLoading,\n\t\tlocation,\n\t\tsetLocation,\n\t\treverseGeocoding,\n\t\ticonClassBackground,\n\t} = useContext(AppContext);\n\n\tuseEffect(() => {\n\t\treverseGeocoding();\n\t\tgetLocationData();\n\t}, [lat, long, units]);\n\n\tconst getLocationData = async () => {\n\t\tconst weatherAPI = `https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=${units}`;\n\t\tconst response = await fetch(weatherAPI);\n\n\t\tif (response.ok) {\n\t\t\tconst data = await response.json();\n\t\t\tsetLocation(data);\n\t\t\tsetClassBackground(data.currently.icon);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<main className={styles.WeatherBlock}>\n\t\t\t<MainWeather location={location} />\n\n\t\t\t<DaysWeather location={location} />\n\t\t</main>\n\t);\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}