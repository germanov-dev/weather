{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/germanov/dev/weather/components/Weather/Weather.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\nimport styles from '../../styles/WeatherBlock.module.css';\nimport MainWeather from '../MainWeather/MainWeather';\nimport DaysWeather from '../DaysWeather/DaysWeather';\n\nvar Weather = function Weather() {\n  _s();\n\n  var _useContext = useContext(AppContext),\n      _long = _useContext[\"long\"],\n      lat = _useContext.lat,\n      units = _useContext.units,\n      setLoading = _useContext.setLoading,\n      location = _useContext.location,\n      setLocation = _useContext.setLocation,\n      reverseGeocoding = _useContext.reverseGeocoding,\n      iconClassBackground = _useContext.iconClassBackground,\n      setClassBackground = _useContext.setClassBackground;\n\n  useEffect(function () {\n    reverseGeocoding();\n    getLocationData();\n  }, [lat, _long, units]);\n\n  var getLocationData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var weatherAPI, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              weatherAPI = \"https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/\".concat(lat, \",\").concat(_long, \"?units=\").concat(units);\n              _context.next = 3;\n              return fetch(weatherAPI);\n\n            case 3:\n              response = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context.sent;\n              setLocation(data);\n              setClassBackground(data.currently.icon);\n              setLoading(false);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getLocationData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.WeatherBlock,\n    children: [/*#__PURE__*/_jsxDEV(MainWeather, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(DaysWeather, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(Weather, \"5tFgD1Waeg7aSq70Yholvc2QnLU=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/germanov/dev/weather/components/Weather/Weather.js"],"names":["useState","useEffect","useContext","AppContext","styles","MainWeather","DaysWeather","Weather","long","lat","units","setLoading","location","setLocation","reverseGeocoding","iconClassBackground","setClassBackground","getLocationData","weatherAPI","fetch","response","ok","json","data","currently","icon","WeatherBlock"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,oBAWjBL,UAAU,CAACC,UAAD,CAXO;AAAA,MAEpBK,KAFoB;AAAA,MAGpBC,GAHoB,eAGpBA,GAHoB;AAAA,MAIpBC,KAJoB,eAIpBA,KAJoB;AAAA,MAKpBC,UALoB,eAKpBA,UALoB;AAAA,MAMpBC,QANoB,eAMpBA,QANoB;AAAA,MAOpBC,WAPoB,eAOpBA,WAPoB;AAAA,MAQpBC,gBARoB,eAQpBA,gBARoB;AAAA,MASpBC,mBAToB,eASpBA,mBAToB;AAAA,MAUpBC,kBAVoB,eAUpBA,kBAVoB;;AAarBf,EAAAA,SAAS,CAAC,YAAM;AACfa,IAAAA,gBAAgB;AAChBG,IAAAA,eAAe;AACf,GAHQ,EAGN,CAACR,GAAD,EAAMD,KAAN,EAAYE,KAAZ,CAHM,CAAT;;AAKA,MAAMO,eAAe;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,cAAAA,UADiB,+EACiET,GADjE,cACwED,KADxE,oBACsFE,KADtF;AAAA;AAAA,qBAEAS,KAAK,CAACD,UAAD,CAFL;;AAAA;AAEjBE,cAAAA,QAFiB;;AAAA,mBAInBA,QAAQ,CAACC,EAJU;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAKHD,QAAQ,CAACE,IAAT,EALG;;AAAA;AAKhBC,cAAAA,IALgB;AAMtBV,cAAAA,WAAW,CAACU,IAAD,CAAX;AACAP,cAAAA,kBAAkB,CAACO,IAAI,CAACC,SAAL,CAAeC,IAAhB,CAAlB;AACAd,cAAAA,UAAU,CAAC,KAAD,CAAV;;AARsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfM,eAAe;AAAA;AAAA;AAAA,KAArB;;AAYA,sBACC;AAAM,IAAA,SAAS,EAAEb,MAAM,CAACsB,YAAxB;AAAA,4BACC,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEd;AAAvB;AAAA;AAAA;AAAA;AAAA,aADD,eAGC,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,aAHD;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AAOA,CArCD;;GAAML,O;;KAAAA,O;AAuCN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\n\nimport styles from '../../styles/WeatherBlock.module.css';\n\nimport MainWeather from '../MainWeather/MainWeather';\nimport DaysWeather from '../DaysWeather/DaysWeather';\n\nconst Weather = () => {\n\tconst {\n\t\tlong,\n\t\tlat,\n\t\tunits,\n\t\tsetLoading,\n\t\tlocation,\n\t\tsetLocation,\n\t\treverseGeocoding,\n\t\ticonClassBackground,\n\t\tsetClassBackground,\n\t} = useContext(AppContext);\n\n\tuseEffect(() => {\n\t\treverseGeocoding();\n\t\tgetLocationData();\n\t}, [lat, long, units]);\n\n\tconst getLocationData = async () => {\n\t\tconst weatherAPI = `https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=${units}`;\n\t\tconst response = await fetch(weatherAPI);\n\n\t\tif (response.ok) {\n\t\t\tconst data = await response.json();\n\t\t\tsetLocation(data);\n\t\t\tsetClassBackground(data.currently.icon);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<main className={styles.WeatherBlock}>\n\t\t\t<MainWeather location={location} />\n\n\t\t\t<DaysWeather location={location} />\n\t\t</main>\n\t);\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}