{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/germanov/dev/weather/pages/[day].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { useRouter } from 'next/router';\nimport MainWeather from '../components/MainWeather/MainWeather';\nimport DaysWeather from '../components/DaysWeather/DaysWeather';\n\nvar DetailedWeather = function DetailedWeather() {\n  _s();\n\n  var _useContext = useContext(AppContext),\n      lat = _useContext.lat,\n      _long = _useContext[\"long\"],\n      units = _useContext.units;\n\n  var _useState = useState([]),\n      weather = _useState[0],\n      setWeather = _useState[1];\n\n  var router = useRouter();\n  var day = router.query.day;\n  useEffect(function () {\n    if (day != undefined) {\n      getDetailedWeather();\n    }\n  }, [day]);\n\n  var getDetailedWeather = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/\".concat(lat, \",\").concat(_long, \",\").concat(day));\n\n            case 2:\n              res = _context.sent;\n\n              if (!res.ok) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              setWeather(data);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getDetailedWeather() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: weather.daily[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(DetailedWeather, \"besx7UpMwdqFdqO3BzJywZ58vhE=\", false, function () {\n  return [useRouter];\n});\n\n_c = DetailedWeather;\nexport default DetailedWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedWeather\");","map":{"version":3,"sources":["/Users/germanov/dev/weather/pages/[day].js"],"names":["useContext","useEffect","useState","AppContext","useRouter","MainWeather","DaysWeather","DetailedWeather","lat","long","units","weather","setWeather","router","day","query","undefined","getDetailedWeather","fetch","res","ok","json","data","daily"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAAA,oBACAP,UAAU,CAACG,UAAD,CADV;AAAA,MACrBK,GADqB,eACrBA,GADqB;AAAA,MAChBC,KADgB;AAAA,MACVC,KADU,eACVA,KADU;;AAAA,kBAECR,QAAQ,CAAC,EAAD,CAFT;AAAA,MAEtBS,OAFsB;AAAA,MAEbC,UAFa;;AAG7B,MAAMC,MAAM,GAAGT,SAAS,EAAxB;AAH6B,MAIrBU,GAJqB,GAIbD,MAAM,CAACE,KAJM,CAIrBD,GAJqB;AAM7Bb,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIa,GAAG,IAAIE,SAAX,EAAsB;AACrBC,MAAAA,kBAAkB;AAClB;AACD,GAJQ,EAIN,CAACH,GAAD,CAJM,CAAT;;AAMA,MAAMG,kBAAkB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACRC,KAAK,6EAC+CV,GAD/C,cACsDC,KADtD,cAC8DK,GAD9D,EADG;;AAAA;AACpBK,cAAAA,GADoB;;AAAA,mBAKtBA,GAAG,CAACC,EALkB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAMND,GAAG,CAACE,IAAJ,EANM;;AAAA;AAMnBC,cAAAA,IANmB;AAQzBV,cAAAA,UAAU,CAACU,IAAD,CAAV;;AARyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAlBL,kBAAkB;AAAA;AAAA;AAAA,KAAxB;;AAYA,sBACC;AAAA,2BACC;AAAA,gBAAMN,OAAO,CAACY,KAAR,CAAc,CAAd;AAAN;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,WADD;AASA,CAjCD;;GAAMhB,e;UAGUH,S;;;KAHVG,e;AAmCN,eAAeA,eAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { useRouter } from 'next/router';\n\nimport MainWeather from '../components/MainWeather/MainWeather';\nimport DaysWeather from '../components/DaysWeather/DaysWeather';\n\nconst DetailedWeather = () => {\n\tconst { lat, long, units } = useContext(AppContext);\n\tconst [weather, setWeather] = useState([]);\n\tconst router = useRouter();\n\tconst { day } = router.query;\n\n\tuseEffect(() => {\n\t\tif (day != undefined) {\n\t\t\tgetDetailedWeather();\n\t\t}\n\t}, [day]);\n\n\tconst getDetailedWeather = async () => {\n\t\tconst res = await fetch(\n\t\t\t`https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long},${day}`\n\t\t);\n\n\t\tif (res.ok) {\n\t\t\tconst data = await res.json();\n\n\t\t\tsetWeather(data);\n\t\t}\n\t};\n\n\treturn (\n\t\t<main>\n\t\t\t<div>{weather.daily[0]}</div>\n\n\t\t\t{/* <MainWeather location={weather} /> */}\n\n\t\t\t{/* <DaysWeather /> */}\n\t\t</main>\n\t);\n};\n\nexport default DetailedWeather;\n"]},"metadata":{},"sourceType":"module"}