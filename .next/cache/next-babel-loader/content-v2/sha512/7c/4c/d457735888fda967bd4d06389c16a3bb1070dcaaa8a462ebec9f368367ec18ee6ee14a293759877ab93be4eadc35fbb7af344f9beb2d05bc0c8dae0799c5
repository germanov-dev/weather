{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/germanov/dev/weather/components/Weather/Weather.js\";\nimport { useState, useEffect } from 'react';\n\nconst Weather = () => {\n  const {\n    0: long,\n    1: setLong\n  } = useState(27.910543);\n  const {\n    0: lat,\n    1: setLat\n  } = useState(43.204666);\n  const {\n    0: location,\n    1: setLocation\n  } = useState();\n  const {\n    0: locationName,\n    1: setLocationName\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    getLocationData();\n  }, [lat, long]);\n\n  const getUserLocation = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLong(position.coords.longitude);\n      setLat(position.coords.latitude);\n    });\n  };\n\n  const getLocationData = async () => {\n    const weatherAPI = `https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=si`;\n    const response = await fetch(weatherAPI);\n\n    if (response.ok) {\n      const data = await response.json();\n      setLocation(data);\n      setLoading(false);\n    }\n  };\n\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    console.log(date);\n    return date.toLocaleTimeString('en-GB');\n  };\n\n  const wheatherHolder = !loading ? /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: \"Varna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: location.currently.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary\",\n        children: location.currently.summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temperature\",\n        children: location.currently.temperature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"data-list\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: formatTime(location.daily.data[0].sunriseTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: formatTime(location.daily.data[0].sunsetTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n  return wheatherHolder;\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/germanov/dev/weather/components/Weather/Weather.js"],"names":["useState","useEffect","Weather","long","setLong","lat","setLat","location","setLocation","locationName","setLocationName","loading","setLoading","getLocationData","getUserLocation","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","weatherAPI","response","fetch","ok","data","json","formatTime","timestamp","date","Date","console","log","toLocaleTimeString","wheatherHolder","currently","icon","summary","temperature","daily","sunriseTime","sunsetTime"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Weather = () => {\n\tconst [long, setLong] = useState(27.910543);\n\tconst [lat, setLat] = useState(43.204666);\n\tconst [location, setLocation] = useState();\n\tconst [locationName, setLocationName] = useState();\n\tconst [loading, setLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tgetLocationData();\n\t}, [lat, long]);\n\n\tconst getUserLocation = () => {\n\t\tnavigator.geolocation.getCurrentPosition((position) => {\n\t\t\tsetLong(position.coords.longitude);\n\t\t\tsetLat(position.coords.latitude);\n\t\t});\n\t};\n\n\tconst getLocationData = async () => {\n\t\tconst weatherAPI = `https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=si`;\n\t\tconst response = await fetch(weatherAPI);\n\n\t\tif (response.ok) {\n\t\t\tconst data = await response.json();\n\t\t\tsetLocation(data);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tconst formatTime = (timestamp) => {\n\t\tconst date = new Date(timestamp);\n\n\t\tconsole.log(date);\n\n\t\treturn date.toLocaleTimeString('en-GB');\n\t};\n\n\tconst wheatherHolder = !loading ? (\n\t\t<main>\n\t\t\t<div className='content'>\n\t\t\t\t<div className='location'>Varna</div>\n\n\t\t\t\t<div className='icon'>{location.currently.icon}</div>\n\n\t\t\t\t<div className='summary'>{location.currently.summary}</div>\n\n\t\t\t\t<div className='temperature'>{location.currently.temperature}</div>\n\n\t\t\t\t<ul className='data-list'>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<div>{formatTime(location.daily.data[0].sunriseTime)}</div>\n\n\t\t\t\t\t\t<div>{formatTime(location.daily.data[0].sunsetTime)}</div>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\t\t\t<div className='sidebar'></div>\n\t\t</main>\n\t) : (\n\t\t<main>Loading</main>\n\t);\n\n\treturn wheatherHolder;\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}