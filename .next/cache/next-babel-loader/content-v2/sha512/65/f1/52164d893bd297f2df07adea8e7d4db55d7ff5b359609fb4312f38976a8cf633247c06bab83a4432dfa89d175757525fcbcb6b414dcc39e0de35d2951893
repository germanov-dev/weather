{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/germanov/dev/weather/components/Weather/Weather.js\";\nimport { useState, useEffect } from 'react';\nconst {\n  0: long,\n  1: setLong\n} = useState(27.9425864);\nconst {\n  0: lat,\n  1: setLat\n} = useState(43.2152716);\nconst {\n  0: location,\n  1: setLocation\n} = useState([]);\nconst {\n  0: locationName,\n  1: setLocationName\n} = useState();\n\nconst getLocation = async () => {\n  const proxy = 'https://cors-anywhere.herokuapp.com/';\n  const weatherAPI = `${proxy}https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=si&lang=bg`;\n  const response = await fetch(weatherAPI);\n  const data = await response.json();\n  return {\n    props: {\n      location: data\n    }\n  };\n};\n\nconst getLocationName = async () => {\n  const reverseLocation = `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${long}&zoom=18&addressdetails=1`;\n  const response = await fetch(reverseLocation);\n  const data = await response.json();\n  setLocationName(data);\n};\n\nconst Weather = () => {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"content\", {\n      children: console.log(location)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"sidebar\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/germanov/dev/weather/components/Weather/Weather.js"],"names":["useState","useEffect","long","setLong","lat","setLat","location","setLocation","locationName","setLocationName","getLocation","proxy","weatherAPI","response","fetch","data","json","props","getLocationName","reverseLocation","Weather","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,MAAM;AAAA,KAACC,IAAD;AAAA,KAAOC;AAAP,IAAkBH,QAAQ,CAAC,UAAD,CAAhC;AACA,MAAM;AAAA,KAACI,GAAD;AAAA,KAAMC;AAAN,IAAgBL,QAAQ,CAAC,UAAD,CAA9B;AACA,MAAM;AAAA,KAACM,QAAD;AAAA,KAAWC;AAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAM;AAAA,KAACQ,YAAD;AAAA,KAAeC;AAAf,IAAkCT,QAAQ,EAAhD;;AAEA,MAAMU,WAAW,GAAG,YAAY;AAC/B,QAAMC,KAAK,GAAG,sCAAd;AACA,QAAMC,UAAU,GAAI,GAAED,KAAM,qEAAoEP,GAAI,IAAGF,IAAK,mBAA5G;AAEA,QAAMW,QAAQ,GAAG,MAAMC,KAAK,CAACF,UAAD,CAA5B;AACA,QAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,SAAO;AACNC,IAAAA,KAAK,EAAE;AAAEX,MAAAA,QAAQ,EAAES;AAAZ;AADD,GAAP;AAGA,CAVD;;AAYA,MAAMG,eAAe,GAAG,YAAY;AACnC,QAAMC,eAAe,GAAI,iEAAgEf,GAAI,QAAOF,IAAK,2BAAzG;AAEA,QAAMW,QAAQ,GAAG,MAAMC,KAAK,CAACK,eAAD,CAA5B;AACA,QAAMJ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAP,EAAAA,eAAe,CAACM,IAAD,CAAf;AACA,CAPD;;AASA,MAAMK,OAAO,GAAG,MAAM;AACrB,sBACC;AAAA,4BACC;AAAA,gBAAUC,OAAO,CAACC,GAAR,CAAYhB,QAAZ;AAAV;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CARD;;AAUA,eAAec,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst [long, setLong] = useState(27.9425864);\nconst [lat, setLat] = useState(43.2152716);\nconst [location, setLocation] = useState([]);\nconst [locationName, setLocationName] = useState();\n\nconst getLocation = async () => {\n\tconst proxy = 'https://cors-anywhere.herokuapp.com/';\n\tconst weatherAPI = `${proxy}https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=si&lang=bg`;\n\n\tconst response = await fetch(weatherAPI);\n\tconst data = await response.json();\n\n\treturn {\n\t\tprops: { location: data },\n\t};\n};\n\nconst getLocationName = async () => {\n\tconst reverseLocation = `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${long}&zoom=18&addressdetails=1`;\n\n\tconst response = await fetch(reverseLocation);\n\tconst data = await response.json();\n\n\tsetLocationName(data);\n};\n\nconst Weather = () => {\n\treturn (\n\t\t<main>\n\t\t\t<content>{console.log(location)}</content>\n\n\t\t\t<sidebar></sidebar>\n\t\t</main>\n\t);\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}