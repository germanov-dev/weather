{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/germanov/dev/weather/components/Weather/Weather.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nvar Weather = function Weather() {\n  _s();\n\n  var _useState = useState(27.9425864),\n      _long = _useState[0],\n      setLong = _useState[1];\n\n  var _useState2 = useState(43.2152716),\n      lat = _useState2[0],\n      setLat = _useState2[1];\n\n  var _useState3 = useState([]),\n      location = _useState3[0],\n      setLocation = _useState3[1];\n\n  var _useState4 = useState(),\n      locationName = _useState4[0],\n      setLocationName = _useState4[1];\n\n  useEffect(function () {\n    getLocation();\n  }, []);\n\n  var getLocation = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var proxy, weatherAPI, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              proxy = 'https://cors-anywhere.herokuapp.com/';\n              weatherAPI = \"\".concat(proxy, \"https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/\").concat(lat, \",\").concat(_long, \"?units=si&lang=bg\");\n              _context.next = 4;\n              return fetch(weatherAPI);\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context.sent;\n              setLocation(data);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getLocation() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getLocationName = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var reverseLocation, response, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              reverseLocation = \"https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=\".concat(lat, \"&lon=\").concat(_long, \"&zoom=18&addressdetails=1\");\n              _context2.next = 3;\n              return fetch(reverseLocation);\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context2.sent;\n              setLocationName(data);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getLocationName() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"content\", {\n      children: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"sidebar\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(Weather, \"5m3yW7ZH4lpyQnYMV7arECzLtR0=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/germanov/dev/weather/components/Weather/Weather.js"],"names":["useState","useEffect","Weather","long","setLong","lat","setLat","location","setLocation","locationName","setLocationName","getLocation","proxy","weatherAPI","fetch","response","json","data","getLocationName","reverseLocation"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,kBACGF,QAAQ,CAAC,UAAD,CADX;AAAA,MACdG,KADc;AAAA,MACRC,OADQ;;AAAA,mBAECJ,QAAQ,CAAC,UAAD,CAFT;AAAA,MAEdK,GAFc;AAAA,MAETC,MAFS;;AAAA,mBAGWN,QAAQ,CAAC,EAAD,CAHnB;AAAA,MAGdO,QAHc;AAAA,MAGJC,WAHI;;AAAA,mBAImBR,QAAQ,EAJ3B;AAAA,MAIdS,YAJc;AAAA,MAIAC,eAJA;;AAMrBT,EAAAA,SAAS,CAAC,YAAM;AACfU,IAAAA,WAAW;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,WAAW;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,cAAAA,KADa,GACL,sCADK;AAEbC,cAAAA,UAFa,aAEGD,KAFH,+EAE6EP,GAF7E,cAEoFF,KAFpF;AAAA;AAAA,qBAIIW,KAAK,CAACD,UAAD,CAJT;;AAAA;AAIbE,cAAAA,QAJa;AAAA;AAAA,qBAKAA,QAAQ,CAACC,IAAT,EALA;;AAAA;AAKbC,cAAAA,IALa;AAOnBT,cAAAA,WAAW,CAACS,IAAD,CAAX;;AAPmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXN,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAUA,MAAMO,eAAe;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,cAAAA,eADiB,2EACkEd,GADlE,kBAC6EF,KAD7E;AAAA;AAAA,qBAGAW,KAAK,CAACK,eAAD,CAHL;;AAAA;AAGjBJ,cAAAA,QAHiB;AAAA;AAAA,qBAIJA,QAAQ,CAACC,IAAT,EAJI;;AAAA;AAIjBC,cAAAA,IAJiB;AAMvBP,cAAAA,eAAe,CAACO,IAAD,CAAf;;AANuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfC,eAAe;AAAA;AAAA;AAAA,KAArB;;AASA,sBACC;AAAA,4BACC;AAAA,gBAAUX;AAAV;AAAA;AAAA;AAAA;AAAA,aADD,eAGC;AAAA;AAAA;AAAA;AAAA,aAHD;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AAOA,CApCD;;GAAML,O;;KAAAA,O;AAsCN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Weather = () => {\n\tconst [long, setLong] = useState(27.9425864);\n\tconst [lat, setLat] = useState(43.2152716);\n\tconst [location, setLocation] = useState([]);\n\tconst [locationName, setLocationName] = useState();\n\n\tuseEffect(() => {\n\t\tgetLocation();\n\t}, []);\n\n\tconst getLocation = async () => {\n\t\tconst proxy = 'https://cors-anywhere.herokuapp.com/';\n\t\tconst weatherAPI = `${proxy}https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=si&lang=bg`;\n\n\t\tconst response = await fetch(weatherAPI);\n\t\tconst data = await response.json();\n\n\t\tsetLocation(data);\n\t};\n\n\tconst getLocationName = async () => {\n\t\tconst reverseLocation = `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${long}&zoom=18&addressdetails=1`;\n\n\t\tconst response = await fetch(reverseLocation);\n\t\tconst data = await response.json();\n\n\t\tsetLocationName(data);\n\t};\n\n\treturn (\n\t\t<main>\n\t\t\t<content>{location}</content>\n\n\t\t\t<sidebar></sidebar>\n\t\t</main>\n\t);\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}