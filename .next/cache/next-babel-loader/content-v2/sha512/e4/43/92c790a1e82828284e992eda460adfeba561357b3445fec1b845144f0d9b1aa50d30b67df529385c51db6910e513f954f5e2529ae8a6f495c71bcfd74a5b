{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/germanov/dev/weather/components/Weather/Weather.js\";\nimport { useState, useEffect } from 'react';\n\nconst Weather = () => {\n  const {\n    0: long,\n    1: setLong\n  } = useState(1.9425864);\n  const {\n    0: lat,\n    1: setLat\n  } = useState(5.2152716);\n  const {\n    0: location,\n    1: setLocation\n  } = useState([]);\n  const {\n    0: locationName,\n    1: setLocationName\n  } = useState();\n  useEffect(() => {\n    getUserLocation();\n    getLocationData();\n  }, [lat, long]);\n\n  const getUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setLong(position.coords.longitude);\n        setLat(position.coords.latitude);\n      });\n    } else {\n      return;\n    }\n  };\n\n  const getLocationData = async () => {\n    const proxy = 'https://cors-anywhere.herokuapp.com/';\n    const weatherAPI = `${proxy}https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=si`;\n    const response = await fetch(weatherAPI);\n    const data = await response.json();\n    setLocation(data);\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"content\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"sidebar\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/germanov/dev/weather/components/Weather/Weather.js"],"names":["useState","useEffect","Weather","long","setLong","lat","setLat","location","setLocation","locationName","setLocationName","getUserLocation","getLocationData","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","proxy","weatherAPI","response","fetch","data","json","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACrB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,CAAC,SAAD,CAAhC;AACA,QAAM;AAAA,OAACK,GAAD;AAAA,OAAMC;AAAN,MAAgBN,QAAQ,CAAC,SAAD,CAA9B;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACS,YAAD;AAAA,OAAeC;AAAf,MAAkCV,QAAQ,EAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,eAAe;AACfC,IAAAA,eAAe;AACf,GAHQ,EAGN,CAACP,GAAD,EAAMF,IAAN,CAHM,CAAT;;AAKA,QAAMQ,eAAe,GAAG,MAAM;AAC7B,QAAIE,SAAS,CAACC,WAAd,EAA2B;AAC1BD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAI;AACpDZ,QAAAA,OAAO,CAACY,QAAQ,CAACC,MAAT,CAAgBC,SAAjB,CAAP;AACAZ,QAAAA,MAAM,CAACU,QAAQ,CAACC,MAAT,CAAgBE,QAAjB,CAAN;AACA,OAHD;AAIA,KALD,MAKO;AACN;AACA;AACD,GATD;;AAWA,QAAMP,eAAe,GAAG,YAAY;AACnC,UAAMQ,KAAK,GAAG,sCAAd;AACA,UAAMC,UAAU,GAAI,GAAED,KAAM,qEAAoEf,GAAI,IAAGF,IAAK,WAA5G;AAEA,UAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAACF,UAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAjB,IAAAA,WAAW,CAACgB,IAAD,CAAX;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,GATD;;AAWA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAxCD;;AA0CA,eAAetB,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Weather = () => {\n\tconst [long, setLong] = useState(1.9425864);\n\tconst [lat, setLat] = useState(5.2152716);\n\tconst [location, setLocation] = useState([]);\n\tconst [locationName, setLocationName] = useState();\n\n\tuseEffect(() => {\n\t\tgetUserLocation();\n\t\tgetLocationData();\n\t}, [lat, long]);\n\n\tconst getUserLocation = () => {\n\t\tif (navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition(position => {\n\t\t\t\tsetLong(position.coords.longitude);\n\t\t\t\tsetLat(position.coords.latitude);\n\t\t\t})\t\n\t\t} else {\n\t\t\treturn\n\t\t}\n\t}\n\n\tconst getLocationData = async () => {\n\t\tconst proxy = 'https://cors-anywhere.herokuapp.com/';\n\t\tconst weatherAPI = `${proxy}https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=si`;\n\n\t\tconst response = await fetch(weatherAPI);\n\t\tconst data = await response.json();\n\t\tsetLocation(data);\n\n\t\tconsole.log(data)\n\t};\n\n\treturn (\n\t\t<main>\n\t\t\t<content></content>\n\n\t\t\t<sidebar></sidebar>\n\t\t</main>\n\t);\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}