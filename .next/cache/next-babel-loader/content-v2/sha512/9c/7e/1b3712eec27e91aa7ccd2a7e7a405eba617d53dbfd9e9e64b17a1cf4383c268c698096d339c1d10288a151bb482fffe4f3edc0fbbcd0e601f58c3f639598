{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/germanov/dev/weather/pages/[day].js\";\nimport { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\nimport Spinner from '../components/Spinner/Spinner';\nimport styles from '../styles/DetailedWeather.module.css';\n\nconst DetailedWeather = () => {\n  const {\n    lat,\n    long,\n    units,\n    cityName,\n    countryName,\n    reverseGeocoding,\n    weatherIcon,\n    formatTime,\n    windDirection\n  } = useContext(AppContext);\n  const {\n    0: weather,\n    1: setWeather\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const router = useRouter();\n  const {\n    day\n  } = router.query;\n  useEffect(() => {\n    if (day != undefined) {\n      getDetailedWeather();\n      reverseGeocoding();\n    }\n  }, [day, units]);\n\n  const getDetailedWeather = async () => {\n    const res = await fetch(`https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long},${day}?units=${units}`);\n\n    if (res.ok) {\n      const data = await res.json();\n      setWeather(data);\n      setLoading(false);\n      console.log(data);\n    }\n  };\n\n  const formatDate = timestamp => {\n    const fullDate = new Date(timestamp * 1000);\n    let day = fullDate.getDay();\n    const date = fullDate.getDate();\n    let month = fullDate.getMonth();\n    const year = fullDate.getFullYear();\n\n    switch (day) {\n      case 0:\n        day = 'Sunday';\n        break;\n\n      case 1:\n        day = 'Monday';\n        break;\n\n      case 2:\n        day = 'Tuesday';\n        break;\n\n      case 3:\n        day = 'Wednesday';\n        break;\n\n      case 4:\n        day = 'Thursday';\n        break;\n\n      case 5:\n        day = 'Friday';\n        break;\n\n      case 6:\n        day = 'Saturday';\n\n      default:\n        break;\n    }\n\n    switch (month) {\n      case 0:\n        month = 'January';\n        break;\n\n      case 1:\n        month = 'February';\n        break;\n\n      case 2:\n        month = 'March';\n        break;\n\n      case 3:\n        month = 'April';\n        break;\n\n      case 4:\n        month = 'May';\n        break;\n\n      case 5:\n        month = 'June';\n        break;\n\n      case 6:\n        month = 'July';\n        break;\n\n      case 7:\n        month = 'August';\n        break;\n\n      case 8:\n        month = 'September';\n        break;\n\n      case 9:\n        month = 'October';\n        break;\n\n      case 10:\n        month = 'November';\n        break;\n\n      case 11:\n        month = 'December';\n        break;\n\n      default:\n        break;\n    }\n\n    return `${day}, ${date} ${month} ${year}`;\n  };\n\n  const detailedWeather = !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.DetailedWeather,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Date,\n        children: formatDate(weather.daily.data[0].time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Location,\n        children: [cityName, \", \", countryName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: weatherIcon(weather.daily.data[0].icon)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Summary,\n        children: weather.daily.data[0].summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Row,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Temp,\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: \"/temp-high.svg\",\n            width: 70,\n            height: 70\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 7\n          }, this), \"High:\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].temperatureHigh), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 7\n          }, this), ' ', \"at\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatTime(weather.daily.data[0].temperatureHighTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Temp,\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: \"/temp-low.svg\",\n            width: 70,\n            height: 70\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 7\n          }, this), \"Low:\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].temperatureLow), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 7\n          }, this), ' ', \"at\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatTime(weather.daily.data[0].temperatureLowTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.DetailedList,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: \"/sunrise.svg\",\n              width: 50,\n              height: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 8\n            }, this), \" Sunrise\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatTime(weather.daily.data[0].sunriseTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: \"/sunset.svg\",\n              width: 50,\n              height: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 8\n            }, this), \" Sunset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatTime(weather.daily.data[0].sunsetTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: \"/umbrella.svg\",\n              width: 50,\n              height: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 8\n            }, this), \" Chance of Rain\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].precipProbability * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Humidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].humidity * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Wind\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: windDirection(weather.daily.data[0].windBearing)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 8\n            }, this), ' ', Math.round(weather.daily.data[0].windSpeed), ' ', units == 'us' ? 'mph' : 'm/s']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Wind Gust\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].windGust), ' ', units == 'us' ? 'mph' : 'm/s']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Precipation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].precipIntensity * 10), \" cm\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Pressure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].pressure), \" hPa\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].visibility), \" km\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"UV Index\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: weather.daily.data[0].uvIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Ozone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [weather.daily.data[0].ozone, \" DU\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Cloud Cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [weather.daily.data[0].cloudCover * 100, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Moon Phase:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: weather.daily.data[0].moonPhase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: detailedWeather\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 9\n  }, this);\n};\n\nexport default DetailedWeather;","map":{"version":3,"sources":["/Users/germanov/dev/weather/pages/[day].js"],"names":["useContext","useEffect","useState","AppContext","useRouter","Image","Spinner","styles","DetailedWeather","lat","long","units","cityName","countryName","reverseGeocoding","weatherIcon","formatTime","windDirection","weather","setWeather","loading","setLoading","router","day","query","undefined","getDetailedWeather","res","fetch","ok","data","json","console","log","formatDate","timestamp","fullDate","Date","getDay","date","getDate","month","getMonth","year","getFullYear","detailedWeather","daily","time","Location","icon","Summary","summary","Row","Temp","Math","round","temperatureHigh","temperatureHighTime","temperatureLow","temperatureLowTime","DetailedList","sunriseTime","sunsetTime","precipProbability","humidity","windBearing","windSpeed","windGust","precipIntensity","pressure","visibility","uvIndex","ozone","cloudCover","moonPhase"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\n\nimport Spinner from '../components/Spinner/Spinner';\nimport styles from '../styles/DetailedWeather.module.css';\n\nconst DetailedWeather = () => {\n\tconst {\n\t\tlat,\n\t\tlong,\n\t\tunits,\n\t\tcityName,\n\t\tcountryName,\n\t\treverseGeocoding,\n\t\tweatherIcon,\n\t\tformatTime,\n\t\twindDirection,\n\t} = useContext(AppContext);\n\tconst [weather, setWeather] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst router = useRouter();\n\tconst { day } = router.query;\n\n\tuseEffect(() => {\n\t\tif (day != undefined) {\n\t\t\tgetDetailedWeather();\n\t\t\treverseGeocoding();\n\t\t}\n\t}, [day, units]);\n\n\tconst getDetailedWeather = async () => {\n\t\tconst res = await fetch(\n\t\t\t`https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long},${day}?units=${units}`\n\t\t);\n\n\t\tif (res.ok) {\n\t\t\tconst data = await res.json();\n\n\t\t\tsetWeather(data);\n\t\t\tsetLoading(false);\n\t\t\tconsole.log(data);\n\t\t}\n\t};\n\n\tconst formatDate = (timestamp) => {\n\t\tconst fullDate = new Date(timestamp * 1000);\n\t\tlet day = fullDate.getDay();\n\t\tconst date = fullDate.getDate();\n\t\tlet month = fullDate.getMonth();\n\t\tconst year = fullDate.getFullYear();\n\n\t\tswitch (day) {\n\t\t\tcase 0:\n\t\t\t\tday = 'Sunday';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tday = 'Monday';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tday = 'Tuesday';\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tday = 'Wednesday';\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tday = 'Thursday';\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tday = 'Friday';\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tday = 'Saturday';\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tswitch (month) {\n\t\t\tcase 0:\n\t\t\t\tmonth = 'January';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tmonth = 'February';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tmonth = 'March';\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tmonth = 'April';\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tmonth = 'May';\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tmonth = 'June';\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tmonth = 'July';\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tmonth = 'August';\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tmonth = 'September';\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tmonth = 'October';\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tmonth = 'November';\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tmonth = 'December';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn `${day}, ${date} ${month} ${year}`;\n\t};\n\n\tconst detailedWeather = !loading ? (\n\t\t<div className={styles.DetailedWeather}>\n\t\t\t<div>\n\t\t\t\t<div className={styles.Date}>\n\t\t\t\t\t{formatDate(weather.daily.data[0].time)}\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.Location}>\n\t\t\t\t\t{cityName}, {countryName}\n\t\t\t\t</div>\n\n\t\t\t\t<div>{weatherIcon(weather.daily.data[0].icon)}</div>\n\n\t\t\t\t<div className={styles.Summary}>{weather.daily.data[0].summary}</div>\n\n\t\t\t\t<div className={styles.Row}>\n\t\t\t\t\t<div className={styles.Temp}>\n\t\t\t\t\t\t<Image src='/temp-high.svg' width={70} height={70} />\n\t\t\t\t\t\tHigh:{' '}\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{Math.round(weather.daily.data[0].temperatureHigh)}°\n\t\t\t\t\t\t</strong>{' '}\n\t\t\t\t\t\tat{' '}\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{formatTime(weather.daily.data[0].temperatureHighTime)}\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={styles.Temp}>\n\t\t\t\t\t\t<Image src='/temp-low.svg' width={70} height={70} />\n\t\t\t\t\t\tLow:{' '}\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{Math.round(weather.daily.data[0].temperatureLow)}°\n\t\t\t\t\t\t</strong>{' '}\n\t\t\t\t\t\tat{' '}\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{formatTime(weather.daily.data[0].temperatureLowTime)}\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<ul className={styles.DetailedList}>\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Image src='/sunrise.svg' width={50} height={50} /> Sunrise\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<strong>{formatTime(weather.daily.data[0].sunriseTime)}</strong>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Image src='/sunset.svg' width={50} height={50} /> Sunset\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<strong>{formatTime(weather.daily.data[0].sunsetTime)}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Image src='/umbrella.svg' width={50} height={50} /> Chance of\n\t\t\t\t\t\t\tRain\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{Math.round(weather.daily.data[0].precipProbability * 100)}%\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Humidity</span>\n\n\t\t\t\t\t\t<strong>{Math.round(weather.daily.data[0].humidity * 100)}%</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Wind</span>\n\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t<span>{windDirection(weather.daily.data[0].windBearing)}</span>{' '}\n\t\t\t\t\t\t\t{Math.round(weather.daily.data[0].windSpeed)}{' '}\n\t\t\t\t\t\t\t{units == 'us' ? 'mph' : 'm/s'}\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Wind Gust</span>\n\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{Math.round(weather.daily.data[0].windGust)}{' '}\n\t\t\t\t\t\t\t{units == 'us' ? 'mph' : 'm/s'}\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Precipation</span>\n\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{Math.round(weather.daily.data[0].precipIntensity * 10)} cm\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Pressure</span>\n\n\t\t\t\t\t\t<strong>{Math.round(weather.daily.data[0].pressure)} hPa</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Visibility</span>\n\n\t\t\t\t\t\t<strong>{Math.round(weather.daily.data[0].visibility)} km</strong>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>UV Index</span>\n\n\t\t\t\t\t\t<strong>{weather.daily.data[0].uvIndex}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Ozone</span>\n\n\t\t\t\t\t\t<strong>{weather.daily.data[0].ozone} DU</strong>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Cloud Cover</span>\n\n\t\t\t\t\t\t<strong>{weather.daily.data[0].cloudCover * 100}%</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Moon Phase:</span>\n\n\t\t\t\t\t\t<strong>{weather.daily.data[0].moonPhase}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t) : (\n\t\t<Spinner />\n\t);\n\n\treturn <main>{detailedWeather}</main>;\n};\n\nexport default DetailedWeather;\n"]},"metadata":{},"sourceType":"module"}