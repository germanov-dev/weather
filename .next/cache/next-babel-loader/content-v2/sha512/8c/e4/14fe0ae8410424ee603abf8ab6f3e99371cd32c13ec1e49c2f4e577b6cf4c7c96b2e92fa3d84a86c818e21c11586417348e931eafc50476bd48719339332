{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useContext, useEffect, useState, useRef } from 'react';\nimport { AppContext } from '../../context/AppContext';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\nimport Spinner from '../../components/Spinner/Spinner';\nimport styles from '../../styles/DetailedWeather.module.css';\n\nvar DetailedWeather = function DetailedWeather() {\n  var _useContext = useContext(AppContext),\n      lat = _useContext.lat,\n      _long = _useContext[\"long\"],\n      units = _useContext.units,\n      cityName = _useContext.cityName,\n      countryName = _useContext.countryName,\n      reverseGeocoding = _useContext.reverseGeocoding,\n      weatherIcon = _useContext.weatherIcon,\n      formatTime = _useContext.formatTime,\n      windDirection = _useContext.windDirection,\n      weather = _useContext.weather,\n      setWeather = _useContext.setWeather,\n      setClassBackground = _useContext.setClassBackground;\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(0),\n      hourIndex = _useState2[0],\n      setHourIndex = _useState2[1];\n\n  var router = useRouter();\n  var day = router.query.day;\n  var chartSelector = useRef();\n  var chartContainer = useRef();\n  var chartBlock = useRef();\n  useEffect(function () {\n    if (day != undefined) {\n      getDetailedWeather();\n      reverseGeocoding();\n    }\n  }, [day, units]);\n\n  var getDetailedWeather = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/\".concat(lat, \",\").concat(_long, \",\").concat(day, \"?units=\").concat(units));\n\n            case 2:\n              res = _context.sent;\n\n              if (!res.ok) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              setWeather(data);\n              setClassBackground(data.hourly.icon);\n              setLoading(false);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getDetailedWeather() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var formatDate = function formatDate(timestamp) {\n    var fullDate = new Date(timestamp * 1000);\n    var day = fullDate.getDay();\n    var date = fullDate.getDate();\n    var month = fullDate.getMonth();\n    var year = fullDate.getFullYear();\n\n    switch (day) {\n      case 0:\n        day = 'Sunday';\n        break;\n\n      case 1:\n        day = 'Monday';\n        break;\n\n      case 2:\n        day = 'Tuesday';\n        break;\n\n      case 3:\n        day = 'Wednesday';\n        break;\n\n      case 4:\n        day = 'Thursday';\n        break;\n\n      case 5:\n        day = 'Friday';\n        break;\n\n      case 6:\n        day = 'Saturday';\n\n      default:\n        break;\n    }\n\n    switch (month) {\n      case 0:\n        month = 'January';\n        break;\n\n      case 1:\n        month = 'February';\n        break;\n\n      case 2:\n        month = 'March';\n        break;\n\n      case 3:\n        month = 'April';\n        break;\n\n      case 4:\n        month = 'May';\n        break;\n\n      case 5:\n        month = 'June';\n        break;\n\n      case 6:\n        month = 'July';\n        break;\n\n      case 7:\n        month = 'August';\n        break;\n\n      case 8:\n        month = 'September';\n        break;\n\n      case 9:\n        month = 'October';\n        break;\n\n      case 10:\n        month = 'November';\n        break;\n\n      case 11:\n        month = 'December';\n        break;\n\n      default:\n        break;\n    }\n\n    return \"\".concat(day, \", \").concat(date, \" \").concat(month, \" \").concat(year);\n  };\n\n  var moonPhaseHandler = function moonPhaseHandler(phase) {\n    switch (true) {\n      case phase > 0 && phase <= 0.12:\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/moon-phase-1.svg\",\n          width: 21,\n          height: 21\n        });\n\n      case phase > 0.12 && phase <= 0.25:\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/moon-phase-2.svg\",\n          width: 21,\n          height: 21\n        });\n\n      case phase > 0.25 && phase <= 0.37:\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/moon-phase-3.svg\",\n          width: 21,\n          height: 21\n        });\n\n      case phase > 0.37 && phase <= 0.5:\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/moon-phase-4.svg\",\n          width: 21,\n          height: 21\n        });\n\n      case phase > 0.5 && phase <= 0.62:\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/moon-phase-5.svg\",\n          width: 21,\n          height: 21\n        });\n\n      case phase > 0.62 && phase <= 0.75:\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/moon-phase-6.svg\",\n          width: 21,\n          height: 21\n        });\n\n      case phase > 0.75 && phase <= 0.87:\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/moon-phase-7.svg\",\n          width: 21,\n          height: 21\n        });\n\n      case phase > 0.87 && phase <= 1:\n        return /*#__PURE__*/_jsx(Image, {\n          src: \"/moon-phase-8.svg\",\n          width: 21,\n          height: 21\n        });\n\n      default:\n        break;\n    }\n  };\n\n  var mouseMoveSelector = function mouseMoveSelector(event) {\n    chartSelector.current.style.left = \"\".concat(event.pageX - chartBlock.current.getBoundingClientRect().left, \"px\");\n  };\n\n  var dotMouseOverHandler = function dotMouseOverHandler(index) {\n    setHourIndex(index);\n  };\n\n  var detailedWeather = !loading ? /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.DetailedWeather,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"button\", {\n          onClick: router.back,\n          className: styles.Back,\n          children: \"Back\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.Date,\n          children: formatDate(weather.daily.data[0].time)\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.Location,\n          children: [cityName, \", \", countryName]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          children: weatherIcon(weather.daily.data[0].icon)\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.Summary,\n          children: weather.daily.data[0].summary\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.Row,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.Temp,\n            children: [/*#__PURE__*/_jsx(Image, {\n              src: \"/temp-high.svg\",\n              width: 70,\n              height: 70\n            }), \"High:\", ' ', /*#__PURE__*/_jsxs(\"strong\", {\n              children: [Math.round(weather.daily.data[0].temperatureHigh), \"\\xB0\"]\n            }), ' ', \"at\", ' ', /*#__PURE__*/_jsx(\"strong\", {\n              children: formatTime(weather.daily.data[0].temperatureHighTime)\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.Temp,\n            children: [/*#__PURE__*/_jsx(Image, {\n              src: \"/temp-low.svg\",\n              width: 70,\n              height: 70\n            }), \"Low:\", ' ', /*#__PURE__*/_jsxs(\"strong\", {\n              children: [Math.round(weather.daily.data[0].temperatureLow), \"\\xB0\"]\n            }), ' ', \"at\", ' ', /*#__PURE__*/_jsx(\"strong\", {\n              children: formatTime(weather.daily.data[0].temperatureLowTime)\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"ul\", {\n        className: styles.DetailedList,\n        children: [/*#__PURE__*/_jsxs(\"li\", {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Sunrise\"\n            }), /*#__PURE__*/_jsx(\"strong\", {\n              children: formatTime(weather.daily.data[0].sunriseTime)\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Sunset\"\n            }), /*#__PURE__*/_jsx(\"strong\", {\n              children: formatTime(weather.daily.data[0].sunsetTime)\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Chance of Rain\"\n            }), /*#__PURE__*/_jsxs(\"strong\", {\n              children: [Math.round(weather.daily.data[0].precipProbability * 100), \"%\"]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Humidity\"\n            }), /*#__PURE__*/_jsxs(\"strong\", {\n              children: [Math.round(weather.daily.data[0].humidity * 100), \"%\"]\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Precipation\"\n            }), /*#__PURE__*/_jsxs(\"strong\", {\n              children: [Math.round(weather.daily.data[0].precipIntensity * 10), \" cm\"]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Maximum Precipation\"\n            }), /*#__PURE__*/_jsxs(\"strong\", {\n              children: [Math.round(weather.daily.data[0].precipIntensityMax * 10), \" cm\"]\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Wind\"\n            }), /*#__PURE__*/_jsxs(\"strong\", {\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: windDirection(weather.daily.data[0].windBearing)\n              }), ' ', Math.round(weather.daily.data[0].windSpeed), ' ', units == 'us' ? 'mph' : 'm/s']\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Wind Gust\"\n            }), /*#__PURE__*/_jsxs(\"strong\", {\n              children: [Math.round(weather.daily.data[0].windGust), ' ', units == 'us' ? 'mph' : 'm/s']\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Visibility\"\n            }), /*#__PURE__*/_jsxs(\"strong\", {\n              children: [Math.round(weather.daily.data[0].visibility), \" km\"]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"UV Index\"\n            }), /*#__PURE__*/_jsx(\"strong\", {\n              children: weather.daily.data[0].uvIndex\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Ozone\"\n            }), /*#__PURE__*/_jsxs(\"strong\", {\n              children: [weather.daily.data[0].ozone, \" DU\"]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Cloud Cover\"\n            }), /*#__PURE__*/_jsxs(\"strong\", {\n              children: [Math.round(weather.daily.data[0].cloudCover * 100), \"%\"]\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Pressure\"\n            }), /*#__PURE__*/_jsxs(\"strong\", {\n              children: [Math.round(weather.daily.data[0].pressure), \" hPa\"]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"Moon Phase\"\n            }), /*#__PURE__*/_jsx(\"strong\", {\n              children: moonPhaseHandler(weather.daily.data[0].moonPhase)\n            })]\n          })]\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.HoursHolder,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"h3\", {\n          children: \"Hourly\"\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          ref: chartContainer,\n          className: styles.Chart,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.Temperatures,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: styles.First,\n              children: [Math.round(weather.daily.data[0].temperatureHigh) + 3, \"\\xB0\"]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              children: [Math.round(weather.daily.data[0].temperatureHigh), \"\\xB0\"]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              children: [Math.round((weather.daily.data[0].temperatureHigh + weather.daily.data[0].temperatureLow) / 2), \"\\xB0\"]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              children: [Math.round(weather.daily.data[0].temperatureLow), \"\\xB0\"]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.Last,\n              children: [Math.round(weather.daily.data[0].temperatureLow) - 3, \"\\xB0\"]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.ChartBody,\n            onMouseMove: mouseMoveSelector,\n            ref: chartBlock,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              ref: chartSelector,\n              className: styles.Selector\n            }), weather.hourly.data.map(function (hour, index) {\n              var degrees = hour.temperature < 0 ? Math.round(weather.daily.data[0].temperatureLow) + -Math.round(weather.daily.data[0].temperatureHigh + 1) : Math.round(weather.daily.data[0].temperatureHigh) - Math.round(weather.daily.data[0].temperatureLow);\n              var degree = Math.round(200 / Math.abs(degrees));\n              var position = (Math.round(hour.temperature) - Math.round(weather.daily.data[0].temperatureLow)) * degree;\n              return /*#__PURE__*/_jsx(\"div\", {\n                onMouseOver: function onMouseOver() {\n                  return dotMouseOverHandler(index);\n                },\n                className: styles.DotHolder,\n                style: {\n                  left: \"\".concat(4.1 * index + 2, \"%\")\n                },\n                children: /*#__PURE__*/_jsx(\"div\", {\n                  style: {\n                    bottom: \"\".concat(position / 2 + 40, \"px\")\n                  },\n                  className: styles.ChartDot,\n                  children: weatherIcon(hour.icon)\n                })\n              }, hour.time);\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"ul\", {\n          className: styles.HourlyDetails,\n          children: [/*#__PURE__*/_jsxs(\"li\", {\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: \"Time\"\n              }), /*#__PURE__*/_jsx(\"strong\", {\n                children: formatTime(weather.hourly.data[hourIndex].time)\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: \"Summary\"\n              }), /*#__PURE__*/_jsx(\"strong\", {\n                children: weather.hourly.data[hourIndex].summary\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(\"li\", {\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: \"Temperature\"\n              }), /*#__PURE__*/_jsxs(\"strong\", {\n                children: [Math.round(weather.hourly.data[hourIndex].temperature), \"\\xB0\"]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: \"Feels Like\"\n              }), /*#__PURE__*/_jsxs(\"strong\", {\n                children: [Math.round(weather.hourly.data[hourIndex].apparentTemperature), \"\\xB0\"]\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(\"li\", {\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: \"Chance of Rain\"\n              }), /*#__PURE__*/_jsxs(\"strong\", {\n                children: [Math.round(weather.hourly.data[hourIndex].precipProbability * 100), \"%\"]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: \"Precipation\"\n              }), /*#__PURE__*/_jsxs(\"strong\", {\n                children: [Math.round(weather.hourly.data[hourIndex].precipIntensity * 10), ' ', \"cm\"]\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(\"li\", {\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: \"Humidiy\"\n              }), /*#__PURE__*/_jsxs(\"strong\", {\n                children: [Math.round(weather.hourly.data[hourIndex].humidity * 100), \"%\"]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: \"Wind\"\n              }), /*#__PURE__*/_jsxs(\"strong\", {\n                children: [/*#__PURE__*/_jsx(\"span\", {\n                  children: windDirection(weather.hourly.data[hourIndex].windBearing)\n                }), Math.round(weather.hourly.data[hourIndex].windSpeed), ' ', units == 'us' ? 'mph' : 'm/s']\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(\"li\", {\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: \"Cloud Cover\"\n              }), /*#__PURE__*/_jsxs(\"strong\", {\n                children: [Math.round(weather.hourly.data[hourIndex].cloudCover * 100), \"%\"]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: \"UV Index\"\n              }), /*#__PURE__*/_jsx(\"strong\", {\n                children: weather.hourly.data[hourIndex].uvIndex\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(\"li\", {\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: \"Pressure\"\n              }), /*#__PURE__*/_jsxs(\"strong\", {\n                children: [Math.round(weather.hourly.data[hourIndex].pressure), \" hPa\"]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: \"Visibility\"\n              }), /*#__PURE__*/_jsxs(\"strong\", {\n                children: [Math.round(weather.hourly.data[hourIndex].visibility), \" km\"]\n              })]\n            })]\n          })]\n        })]\n      })\n    })]\n  }) : /*#__PURE__*/_jsx(Spinner, {});\n  return /*#__PURE__*/_jsx(\"main\", {\n    children: detailedWeather\n  });\n};\n\nexport default DetailedWeather;","map":null,"metadata":{},"sourceType":"module"}