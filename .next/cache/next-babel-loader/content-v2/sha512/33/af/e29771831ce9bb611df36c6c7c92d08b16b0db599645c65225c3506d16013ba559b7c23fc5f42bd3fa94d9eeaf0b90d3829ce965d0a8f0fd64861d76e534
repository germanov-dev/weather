{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/germanov/dev/weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/germanov/dev/weather/pages/[day].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\nimport Spinner from '../components/Spinner/Spinner';\nimport styles from '../styles/DetailedWeather.module.css';\n\nvar DetailedWeather = function DetailedWeather() {\n  _s();\n\n  var _useContext = useContext(AppContext),\n      lat = _useContext.lat,\n      _long = _useContext[\"long\"],\n      units = _useContext.units,\n      cityName = _useContext.cityName,\n      countryName = _useContext.countryName,\n      reverseGeocoding = _useContext.reverseGeocoding,\n      weatherIcon = _useContext.weatherIcon,\n      formatTime = _useContext.formatTime,\n      windDirection = _useContext.windDirection;\n\n  var _useState = useState([]),\n      weather = _useState[0],\n      setWeather = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var router = useRouter();\n  var day = router.query.day;\n  useEffect(function () {\n    if (day != undefined) {\n      getDetailedWeather();\n      reverseGeocoding();\n    }\n  }, [day, units]);\n\n  var getDetailedWeather = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/\".concat(lat, \",\").concat(_long, \",\").concat(day, \"?units=\").concat(units));\n\n            case 2:\n              res = _context.sent;\n\n              if (!res.ok) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              setWeather(data);\n              setLoading(false);\n              console.log(data);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getDetailedWeather() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var formatDate = function formatDate(timestamp) {\n    var fullDate = new Date(timestamp * 1000);\n    var day = fullDate.getDay();\n    var date = fullDate.getDate();\n    var month = fullDate.getMonth();\n    var year = fullDate.getFullYear();\n\n    switch (day) {\n      case 0:\n        day = 'Sunday';\n        break;\n\n      case 1:\n        day = 'Monday';\n        break;\n\n      case 2:\n        day = 'Tuesday';\n        break;\n\n      case 3:\n        day = 'Wednesday';\n        break;\n\n      case 4:\n        day = 'Thursday';\n        break;\n\n      case 5:\n        day = 'Friday';\n        break;\n\n      case 6:\n        day = 'Saturday';\n\n      default:\n        break;\n    }\n\n    switch (month) {\n      case 0:\n        month = 'January';\n        break;\n\n      case 1:\n        month = 'February';\n        break;\n\n      case 2:\n        month = 'March';\n        break;\n\n      case 3:\n        month = 'April';\n        break;\n\n      case 4:\n        month = 'May';\n        break;\n\n      case 5:\n        month = 'June';\n        break;\n\n      case 6:\n        month = 'July';\n        break;\n\n      case 7:\n        month = 'August';\n        break;\n\n      case 8:\n        month = 'September';\n        break;\n\n      case 9:\n        month = 'October';\n        break;\n\n      case 10:\n        month = 'November';\n        break;\n\n      case 11:\n        month = 'December';\n        break;\n\n      default:\n        break;\n    }\n\n    return \"\".concat(day, \", \").concat(date, \" \").concat(month, \" \").concat(year);\n  };\n\n  var detailedWeather = !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.DetailedWeather,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Date,\n        children: formatDate(weather.daily.data[0].time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Location,\n        children: [cityName, \", \", countryName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: weatherIcon(weather.daily.data[0].icon)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Summary,\n        children: weather.daily.data[0].summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Row,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Temp,\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: \"/temp-high.svg\",\n            width: 70,\n            height: 70\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 7\n          }, _this), \"High:\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].temperatureHigh), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 7\n          }, _this), ' ', \"at\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatTime(weather.daily.data[0].temperatureHighTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Temp,\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: \"/temp-low.svg\",\n            width: 70,\n            height: 70\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 7\n          }, _this), \"Low:\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].temperatureLow), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 7\n          }, _this), ' ', \"at\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatTime(weather.daily.data[0].temperatureLowTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.DetailedList,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: \"/sunrise.svg\",\n              width: 50,\n              height: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 8\n            }, _this), \" Sunrise\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatTime(weather.daily.data[0].sunriseTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: \"/sunset.svg\",\n              width: 50,\n              height: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 8\n            }, _this), \" Sunset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatTime(weather.daily.data[0].sunsetTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.Umbrella,\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: \"/umbrella.svg\",\n              width: 30,\n              height: 30\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 8\n            }, _this), \" Chance of Rain\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].precipProbability * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: \"/humidity.svg\",\n              width: 40,\n              height: 40\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 8\n            }, _this), \"Humidity\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].humidity * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Wind\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: windDirection(weather.daily.data[0].windBearing)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 8\n            }, _this), ' ', Math.round(weather.daily.data[0].windSpeed), ' ', units == 'us' ? 'mph' : 'm/s']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Wind Gust\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].windGust), ' ', units == 'us' ? 'mph' : 'm/s']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Precipation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].precipIntensity * 10), \" cm\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Pressure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].pressure), \" hPa\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [Math.round(weather.daily.data[0].visibility), \" km\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"UV Index\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: weather.daily.data[0].uvIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Ozone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [weather.daily.data[0].ozone, \" DU\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Cloud Cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [weather.daily.data[0].cloudCover * 100, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Moon Phase:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: weather.daily.data[0].moonPhase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 3\n  }, _this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 3\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: detailedWeather\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DetailedWeather, \"vlDG7u6V1GkktDXO33mz6lCz4RM=\", false, function () {\n  return [useRouter];\n});\n\n_c = DetailedWeather;\nexport default DetailedWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedWeather\");","map":{"version":3,"sources":["/Users/germanov/dev/weather/pages/[day].js"],"names":["useContext","useEffect","useState","AppContext","useRouter","Image","Spinner","styles","DetailedWeather","lat","long","units","cityName","countryName","reverseGeocoding","weatherIcon","formatTime","windDirection","weather","setWeather","loading","setLoading","router","day","query","undefined","getDetailedWeather","fetch","res","ok","json","data","console","log","formatDate","timestamp","fullDate","Date","getDay","date","getDate","month","getMonth","year","getFullYear","detailedWeather","daily","time","Location","icon","Summary","summary","Row","Temp","Math","round","temperatureHigh","temperatureHighTime","temperatureLow","temperatureLowTime","DetailedList","sunriseTime","sunsetTime","Umbrella","precipProbability","humidity","windBearing","windSpeed","windGust","precipIntensity","pressure","visibility","uvIndex","ozone","cloudCover","moonPhase"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\n\nimport Spinner from '../components/Spinner/Spinner';\nimport styles from '../styles/DetailedWeather.module.css';\n\nconst DetailedWeather = () => {\n\tconst {\n\t\tlat,\n\t\tlong,\n\t\tunits,\n\t\tcityName,\n\t\tcountryName,\n\t\treverseGeocoding,\n\t\tweatherIcon,\n\t\tformatTime,\n\t\twindDirection,\n\t} = useContext(AppContext);\n\tconst [weather, setWeather] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst router = useRouter();\n\tconst { day } = router.query;\n\n\tuseEffect(() => {\n\t\tif (day != undefined) {\n\t\t\tgetDetailedWeather();\n\t\t\treverseGeocoding();\n\t\t}\n\t}, [day, units]);\n\n\tconst getDetailedWeather = async () => {\n\t\tconst res = await fetch(\n\t\t\t`https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long},${day}?units=${units}`\n\t\t);\n\n\t\tif (res.ok) {\n\t\t\tconst data = await res.json();\n\n\t\t\tsetWeather(data);\n\t\t\tsetLoading(false);\n\t\t\tconsole.log(data);\n\t\t}\n\t};\n\n\tconst formatDate = (timestamp) => {\n\t\tconst fullDate = new Date(timestamp * 1000);\n\t\tlet day = fullDate.getDay();\n\t\tconst date = fullDate.getDate();\n\t\tlet month = fullDate.getMonth();\n\t\tconst year = fullDate.getFullYear();\n\n\t\tswitch (day) {\n\t\t\tcase 0:\n\t\t\t\tday = 'Sunday';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tday = 'Monday';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tday = 'Tuesday';\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tday = 'Wednesday';\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tday = 'Thursday';\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tday = 'Friday';\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tday = 'Saturday';\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tswitch (month) {\n\t\t\tcase 0:\n\t\t\t\tmonth = 'January';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tmonth = 'February';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tmonth = 'March';\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tmonth = 'April';\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tmonth = 'May';\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tmonth = 'June';\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tmonth = 'July';\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tmonth = 'August';\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tmonth = 'September';\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tmonth = 'October';\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tmonth = 'November';\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tmonth = 'December';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn `${day}, ${date} ${month} ${year}`;\n\t};\n\n\tconst detailedWeather = !loading ? (\n\t\t<div className={styles.DetailedWeather}>\n\t\t\t<div>\n\t\t\t\t<div className={styles.Date}>\n\t\t\t\t\t{formatDate(weather.daily.data[0].time)}\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.Location}>\n\t\t\t\t\t{cityName}, {countryName}\n\t\t\t\t</div>\n\n\t\t\t\t<div>{weatherIcon(weather.daily.data[0].icon)}</div>\n\n\t\t\t\t<div className={styles.Summary}>{weather.daily.data[0].summary}</div>\n\n\t\t\t\t<div className={styles.Row}>\n\t\t\t\t\t<div className={styles.Temp}>\n\t\t\t\t\t\t<Image src='/temp-high.svg' width={70} height={70} />\n\t\t\t\t\t\tHigh:{' '}\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{Math.round(weather.daily.data[0].temperatureHigh)}°\n\t\t\t\t\t\t</strong>{' '}\n\t\t\t\t\t\tat{' '}\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{formatTime(weather.daily.data[0].temperatureHighTime)}\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={styles.Temp}>\n\t\t\t\t\t\t<Image src='/temp-low.svg' width={70} height={70} />\n\t\t\t\t\t\tLow:{' '}\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{Math.round(weather.daily.data[0].temperatureLow)}°\n\t\t\t\t\t\t</strong>{' '}\n\t\t\t\t\t\tat{' '}\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{formatTime(weather.daily.data[0].temperatureLowTime)}\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<ul className={styles.DetailedList}>\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Image src='/sunrise.svg' width={50} height={50} /> Sunrise\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<strong>{formatTime(weather.daily.data[0].sunriseTime)}</strong>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Image src='/sunset.svg' width={50} height={50} /> Sunset\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<strong>{formatTime(weather.daily.data[0].sunsetTime)}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span className={styles.Umbrella}>\n\t\t\t\t\t\t\t<Image src='/umbrella.svg' width={30} height={30} /> Chance of\n\t\t\t\t\t\t\tRain\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{Math.round(weather.daily.data[0].precipProbability * 100)}%\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Image src='/humidity.svg' width={40} height={40} />\n\t\t\t\t\t\t\tHumidity\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<strong>{Math.round(weather.daily.data[0].humidity * 100)}%</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Wind</span>\n\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t<span>{windDirection(weather.daily.data[0].windBearing)}</span>{' '}\n\t\t\t\t\t\t\t{Math.round(weather.daily.data[0].windSpeed)}{' '}\n\t\t\t\t\t\t\t{units == 'us' ? 'mph' : 'm/s'}\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Wind Gust</span>\n\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{Math.round(weather.daily.data[0].windGust)}{' '}\n\t\t\t\t\t\t\t{units == 'us' ? 'mph' : 'm/s'}\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Precipation</span>\n\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{Math.round(weather.daily.data[0].precipIntensity * 10)} cm\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Pressure</span>\n\n\t\t\t\t\t\t<strong>{Math.round(weather.daily.data[0].pressure)} hPa</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Visibility</span>\n\n\t\t\t\t\t\t<strong>{Math.round(weather.daily.data[0].visibility)} km</strong>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>UV Index</span>\n\n\t\t\t\t\t\t<strong>{weather.daily.data[0].uvIndex}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Ozone</span>\n\n\t\t\t\t\t\t<strong>{weather.daily.data[0].ozone} DU</strong>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Cloud Cover</span>\n\n\t\t\t\t\t\t<strong>{weather.daily.data[0].cloudCover * 100}%</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Moon Phase:</span>\n\n\t\t\t\t\t\t<strong>{weather.daily.data[0].moonPhase}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t) : (\n\t\t<Spinner />\n\t);\n\n\treturn <main>{detailedWeather}</main>;\n};\n\nexport default DetailedWeather;\n"]},"metadata":{},"sourceType":"module"}