{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/germanov/dev/weather/components/Weather/Weather.js\";\nimport { useState, useEffect } from 'react';\nimport Day from '../Day/Day';\nimport styles from '../../styles/WeatherBlock.module.css';\n\nconst Weather = () => {\n  const {\n    0: long,\n    1: setLong\n  } = useState(27.910543);\n  const {\n    0: lat,\n    1: setLat\n  } = useState(43.204666);\n  const {\n    0: location,\n    1: setLocation\n  } = useState();\n  const {\n    0: locationName,\n    1: setLocationName\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    getLocationData();\n  }, [lat, long]);\n\n  const getUserLocation = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLong(position.coords.longitude);\n      setLat(position.coords.latitude);\n    });\n  };\n\n  const getLocationData = async () => {\n    const weatherAPI = `https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=si`;\n    const response = await fetch(weatherAPI);\n\n    if (response.ok) {\n      const data = await response.json();\n      setLocation(data);\n      setLoading(false);\n      console.log(data);\n    }\n  };\n\n  const formatTime = timestamp => {\n    const date = new Date(timestamp * 1000);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    return `${hours}:${minutes}`;\n  };\n\n  const formatDate = timestamp => {\n    const date = new Date(timestamp * 1000);\n    const day = date.getDay();\n\n    switch (day) {\n      case 0:\n        return 'Sunday';\n\n      case 1:\n        return 'Monday';\n\n      case 2:\n        return 'Tuesday';\n\n      case 3:\n        return 'Wednesday';\n\n      case 4:\n        return 'Thursday';\n\n      case 5:\n        return 'Friday';\n\n      case 6:\n        return 'Saturday';\n\n      default:\n        return;\n    }\n  };\n\n  const wheatherHolder = !loading ? /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.WeatherBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Current,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: \"Varna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: location.currently.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary\",\n        children: location.currently.summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temperature\",\n        children: Math.round(location.currently.temperature)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"data-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Sunrise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: formatTime(location.daily.data[0].sunriseTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Sunset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: formatTime(location.daily.data[0].sunsetTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Chance of Rain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [location.currently.precipProbability * 100, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [location.currently.humidity * 100, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Wind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [Math.round(location.currently.windSpeed), \" m/s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Feels Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: Math.round(location.currently.apparentTemperature)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Precipation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [location.currently.precipIntensity * 10, \" cm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Pressure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [Math.round(location.currently.pressure), \" hPa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Visibility\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [Math.round(location.currently.visibility), \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"UV Index\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: location.currently.uvIndex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Current,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"days\",\n        children: location.daily.data.map((day, index) => {\n          let dayOfWeek = formatDate(day.time);\n\n          if (index == 0) {\n            dayOfWeek = 'Today';\n          }\n\n          if (index == 1) {\n            dayOfWeek = 'Tomorrow';\n          }\n\n          return /*#__PURE__*/_jsxDEV(Day, {\n            day: dayOfWeek,\n            icon: day.icon,\n            temperatureHigh: Math.round(day.temperatureHigh),\n            temperatureLow: Math.round(day.temperatureLow),\n            summary: day.summary\n          }, day.time, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 3\n  }, this);\n  return wheatherHolder;\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/germanov/dev/weather/components/Weather/Weather.js"],"names":["useState","useEffect","Day","styles","Weather","long","setLong","lat","setLat","location","setLocation","locationName","setLocationName","loading","setLoading","getLocationData","getUserLocation","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","weatherAPI","response","fetch","ok","data","json","console","log","formatTime","timestamp","date","Date","hours","getHours","minutes","getMinutes","formatDate","day","getDay","wheatherHolder","WeatherBlock","Current","currently","icon","summary","Math","round","temperature","daily","sunriseTime","sunsetTime","precipProbability","humidity","windSpeed","apparentTemperature","precipIntensity","pressure","visibility","uvIndex","map","index","dayOfWeek","time","temperatureHigh","temperatureLow"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport Day from '../Day/Day';\nimport styles from '../../styles/WeatherBlock.module.css';\n\nconst Weather = () => {\n\tconst [long, setLong] = useState(27.910543);\n\tconst [lat, setLat] = useState(43.204666);\n\tconst [location, setLocation] = useState();\n\tconst [locationName, setLocationName] = useState();\n\tconst [loading, setLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tgetLocationData();\n\t}, [lat, long]);\n\n\tconst getUserLocation = () => {\n\t\tnavigator.geolocation.getCurrentPosition((position) => {\n\t\t\tsetLong(position.coords.longitude);\n\t\t\tsetLat(position.coords.latitude);\n\t\t});\n\t};\n\n\tconst getLocationData = async () => {\n\t\tconst weatherAPI = `https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=si`;\n\t\tconst response = await fetch(weatherAPI);\n\n\t\tif (response.ok) {\n\t\t\tconst data = await response.json();\n\t\t\tsetLocation(data);\n\t\t\tsetLoading(false);\n\n\t\t\tconsole.log(data);\n\t\t}\n\t};\n\n\tconst formatTime = (timestamp) => {\n\t\tconst date = new Date(timestamp * 1000);\n\t\tconst hours = date.getHours();\n\t\tconst minutes = date.getMinutes();\n\n\t\treturn `${hours}:${minutes}`;\n\t};\n\n\tconst formatDate = (timestamp) => {\n\t\tconst date = new Date(timestamp * 1000);\n\t\tconst day = date.getDay();\n\n\t\tswitch (day) {\n\t\t\tcase 0:\n\t\t\t\treturn 'Sunday';\n\n\t\t\tcase 1:\n\t\t\t\treturn 'Monday';\n\n\t\t\tcase 2:\n\t\t\t\treturn 'Tuesday';\n\n\t\t\tcase 3:\n\t\t\t\treturn 'Wednesday';\n\n\t\t\tcase 4:\n\t\t\t\treturn 'Thursday';\n\n\t\t\tcase 5:\n\t\t\t\treturn 'Friday';\n\n\t\t\tcase 6:\n\t\t\t\treturn 'Saturday';\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t};\n\n\tconst wheatherHolder = !loading ? (\n\t\t<main className={styles.WeatherBlock}>\n\t\t\t<div className={styles.Current}>\n\t\t\t\t<div className='location'>Varna</div>\n\n\t\t\t\t<div className='icon'>{location.currently.icon}</div>\n\n\t\t\t\t<div className='summary'>{location.currently.summary}</div>\n\n\t\t\t\t<div className='temperature'>\n\t\t\t\t\t{Math.round(location.currently.temperature)}\n\t\t\t\t</div>\n\n\t\t\t\t<ul className='data-list'>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Sunrise</span>\n\n\t\t\t\t\t\t\t<strong>{formatTime(location.daily.data[0].sunriseTime)}</strong>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Sunset</span>\n\n\t\t\t\t\t\t\t<strong>{formatTime(location.daily.data[0].sunsetTime)}</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Chance of Rain</span>\n\n\t\t\t\t\t\t\t<strong>{location.currently.precipProbability * 100}%</strong>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Humidity</span>\n\n\t\t\t\t\t\t\t<strong>{location.currently.humidity * 100}%</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Wind</span>\n\n\t\t\t\t\t\t\t<strong>{Math.round(location.currently.windSpeed)} m/s</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Feels Like</span>\n\n\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t{Math.round(location.currently.apparentTemperature)}\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Precipation</span>\n\n\t\t\t\t\t\t\t<strong>{location.currently.precipIntensity * 10} cm</strong>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Pressure</span>\n\n\t\t\t\t\t\t\t<strong>{Math.round(location.currently.pressure)} hPa</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Visibility</span>\n\n\t\t\t\t\t\t\t<strong>{Math.round(location.currently.visibility)} km</strong>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>UV Index</span>\n\n\t\t\t\t\t\t\t<strong>{location.currently.uvIndex}</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\t\t\t<div className={styles.Current}>\n\t\t\t\t<div className='days'>\n\t\t\t\t\t{location.daily.data.map((day, index) => {\n\t\t\t\t\t\tlet dayOfWeek = formatDate(day.time);\n\n\t\t\t\t\t\tif (index == 0) {\n\t\t\t\t\t\t\tdayOfWeek = 'Today';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (index == 1) {\n\t\t\t\t\t\t\tdayOfWeek = 'Tomorrow';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Day\n\t\t\t\t\t\t\t\tkey={day.time}\n\t\t\t\t\t\t\t\tday={dayOfWeek}\n\t\t\t\t\t\t\t\ticon={day.icon}\n\t\t\t\t\t\t\t\ttemperatureHigh={Math.round(day.temperatureHigh)}\n\t\t\t\t\t\t\t\ttemperatureLow={Math.round(day.temperatureLow)}\n\t\t\t\t\t\t\t\tsummary={day.summary}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t) : (\n\t\t<main>Loading</main>\n\t);\n\n\treturn wheatherHolder;\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}