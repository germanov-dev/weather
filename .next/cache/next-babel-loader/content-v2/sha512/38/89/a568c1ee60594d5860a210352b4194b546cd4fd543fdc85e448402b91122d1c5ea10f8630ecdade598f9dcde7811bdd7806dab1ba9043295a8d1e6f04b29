{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/germanov/dev/weather/context/AppContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nexport var AppContext = /*#__PURE__*/createContext();\n\nvar AppWrapper = function AppWrapper(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      _long = _useState[0],\n      setLong = _useState[1];\n\n  var _useState2 = useState(2),\n      lat = _useState2[0],\n      setLat = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      \"long\": _long,\n      lat: lat\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(AppWrapper, \"4Uy+YoWWjxd94+/YQaeUsvEXPyo=\");\n\n_c = AppWrapper;\nexport default AppWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppWrapper\");","map":{"version":3,"sources":["/Users/germanov/dev/weather/context/AppContext.js"],"names":["createContext","useContext","useState","AppContext","AppWrapper","children","long","setLong","lat","setLat"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,OAAO,IAAMC,UAAU,gBAAGH,aAAa,EAAhC;;AAEP,IAAMI,UAAU,GAAG,SAAbA,UAAa,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACZH,QAAQ,CAAC,CAAD,CADI;AAAA,MAC7BI,KAD6B;AAAA,MACvBC,OADuB;;AAAA,mBAEdL,QAAQ,CAAC,CAAD,CAFM;AAAA,MAE7BM,GAF6B;AAAA,MAExBC,MAFwB;;AAIpC,sBACC,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAC,cAAAH,KAAD;AAAOE,MAAAA,GAAG,EAAHA;AAAP,KAA5B;AAAA,cAA0CH;AAA1C;AAAA;AAAA;AAAA;AAAA,WADD;AAGA,CAPD;;GAAMD,U;;KAAAA,U;AASN,eAAeA,UAAf","sourcesContent":["import { createContext, useContext, useState } from 'react';\n\nexport const AppContext = createContext();\n\nconst AppWrapper = ({ children }) => {\n\tconst [long, setLong] = useState(1);\n\tconst [lat, setLat] = useState(2);\n\n\treturn (\n\t\t<AppContext.Provider value={{long, lat}}>{children}</AppContext.Provider>\n\t);\n}\n\nexport default AppWrapper;"]},"metadata":{},"sourceType":"module"}