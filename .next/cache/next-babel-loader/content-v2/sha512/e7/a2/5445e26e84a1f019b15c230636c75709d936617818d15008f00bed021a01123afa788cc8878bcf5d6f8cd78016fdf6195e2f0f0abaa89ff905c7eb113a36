{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/germanov/dev/weather/components/Hour/Hour.js\";\nimport { useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\nimport styles from '../../styles/Hour.module.css';\n\nconst Hour = props => {\n  const {\n    formatTime,\n    weatherIcon,\n    units,\n    windDirection\n  } = useContext(AppContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Hour,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: formatTime(props.time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: weatherIcon(props.icon)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Math.round(props.temp), \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Feels Like: \", Math.round(props.feels), \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Chance of Rain: \", Math.round(props.chance * 100), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Precipation: \", Math.round(props.precip * 10), \" cm\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Humidity: \", Math.round(props.humidity * 100), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Wind:\", ' ', `${windDirection(props.windBearing)} ${Math.round(props.windSpeed)} ${units == 'us' ? 'mph' : 'm/s'}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Cloud Cover: \", Math.round(props.cloudCover * 100), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Uv Index: \", props.uvIndex]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Pressure: \", Math.round(props.pressure), \" hPa\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Hour;","map":{"version":3,"sources":["/Users/germanov/dev/weather/components/Hour/Hour.js"],"names":["useContext","AppContext","styles","Hour","props","formatTime","weatherIcon","units","windDirection","time","icon","Math","round","temp","feels","summary","chance","precip","humidity","windBearing","windSpeed","cloudCover","uvIndex","pressure"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,WAAd;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAAoDR,UAAU,CACnEC,UADmE,CAApE;AAIA,sBACC;AAAK,IAAA,SAAS,EAAEC,MAAM,CAACC,IAAvB;AAAA,4BACC;AAAA,gBAAME,UAAU,CAACD,KAAK,CAACK,IAAP;AAAhB;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AAAA,gBAAMH,WAAW,CAACF,KAAK,CAACM,IAAP;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHD,eAKC;AAAA,iBAAMC,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACS,IAAjB,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,eAOC;AAAA,iCAAkBF,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACU,KAAjB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPD,eASC;AAAA,gBAAMV,KAAK,CAACW;AAAZ;AAAA;AAAA;AAAA;AAAA,YATD,eAWC;AAAA,qCAAsBJ,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACY,MAAN,GAAe,GAA1B,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAXD,eAaC;AAAA,kCAAmBL,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACa,MAAN,GAAe,EAA1B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAbD,eAeC;AAAA,+BAAgBN,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACc,QAAN,GAAiB,GAA5B,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAfD,eAiBC;AAAA,0BACO,GADP,EAEG,GAAEV,aAAa,CAACJ,KAAK,CAACe,WAAP,CAAoB,IAAGR,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACgB,SAAjB,CAA4B,IACnEb,KAAK,IAAI,IAAT,GAAgB,KAAhB,GAAwB,KACxB,EAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBD,eAwBC;AAAA,kCAAmBI,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACiB,UAAN,GAAmB,GAA9B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBD,eA0BC;AAAA,+BAAgBjB,KAAK,CAACkB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BD,eA4BC;AAAA,+BAAgBX,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACmB,QAAjB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgCA,CArCD;;AAuCA,eAAepB,IAAf","sourcesContent":["import { useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\n\nimport styles from '../../styles/Hour.module.css';\n\nconst Hour = (props) => {\n\tconst { formatTime, weatherIcon, units, windDirection } = useContext(\n\t\tAppContext\n\t);\n\n\treturn (\n\t\t<div className={styles.Hour}>\n\t\t\t<div>{formatTime(props.time)}</div>\n\n\t\t\t<div>{weatherIcon(props.icon)}</div>\n\n\t\t\t<div>{Math.round(props.temp)}°</div>\n\n\t\t\t<div>Feels Like: {Math.round(props.feels)}°</div>\n\n\t\t\t<div>{props.summary}</div>\n\n\t\t\t<div>Chance of Rain: {Math.round(props.chance * 100)}%</div>\n\n\t\t\t<div>Precipation: {Math.round(props.precip * 10)} cm</div>\n\n\t\t\t<div>Humidity: {Math.round(props.humidity * 100)}%</div>\n\n\t\t\t<div>\n\t\t\t\tWind:{' '}\n\t\t\t\t{`${windDirection(props.windBearing)} ${Math.round(props.windSpeed)} ${\n\t\t\t\t\tunits == 'us' ? 'mph' : 'm/s'\n\t\t\t\t}`}\n\t\t\t</div>\n\n\t\t\t<div>Cloud Cover: {Math.round(props.cloudCover * 100)}%</div>\n\n\t\t\t<div>Uv Index: {props.uvIndex}</div>\n\n\t\t\t<div>Pressure: {Math.round(props.pressure)} hPa</div>\n\t\t</div>\n\t);\n};\n\nexport default Hour;\n"]},"metadata":{},"sourceType":"module"}