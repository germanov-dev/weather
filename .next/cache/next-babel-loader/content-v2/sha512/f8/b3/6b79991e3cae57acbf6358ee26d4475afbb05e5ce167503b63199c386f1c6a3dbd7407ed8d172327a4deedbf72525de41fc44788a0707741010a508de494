{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/germanov/dev/weather/pages/[day].js\";\nimport { useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\nconst {\n  lat,\n  long,\n  units\n} = useContext(AppContext);\nexport const getStaticPaths = async () => {\n  const res = await fetch(`https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=${units}`);\n  const data = await res.json();\n  const paths = data.daily.data.map(path => {\n    return {\n      params: {\n        day: path.time.toString()\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: false\n  };\n};\n\nconst DetailedWeather = ({}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\nexport default DetailedWeather;","map":{"version":3,"sources":["/Users/germanov/dev/weather/pages/[day].js"],"names":["useContext","AppContext","lat","long","units","getStaticPaths","res","fetch","data","json","paths","daily","map","path","params","day","time","toString","fallback","DetailedWeather"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAM;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,IAAuBJ,UAAU,CAACC,UAAD,CAAvC;AAEA,OAAO,MAAMI,cAAc,GAAG,YAAY;AACzC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,qEAAoEL,GAAI,IAAGC,IAAK,UAASC,KAAM,EAD1E,CAAvB;AAGA,QAAMI,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,QAAMC,KAAK,GAAGF,IAAI,CAACG,KAAL,CAAWH,IAAX,CAAgBI,GAAhB,CAAqBC,IAAD,IAAU;AAC3C,WAAO;AACNC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEF,IAAI,CAACG,IAAL,CAAUC,QAAV;AAAP;AADF,KAAP;AAGA,GAJa,CAAd;AAMA,SAAO;AACNP,IAAAA,KADM;AAENQ,IAAAA,QAAQ,EAAE;AAFJ,GAAP;AAIA,CAhBM;;AAkBP,MAAMC,eAAe,GAAG,CAAC,EAAD,KAAQ;AAC/B,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAFD;;AAIA,eAAeA,eAAf","sourcesContent":["import { useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\n\nconst { lat, long, units } = useContext(AppContext);\n\nexport const getStaticPaths = async () => {\n\tconst res = await fetch(\n\t\t`https://api.darksky.net/forecast/d090ad71e840a71b480a0e2443977dab/${lat},${long}?units=${units}`\n\t);\n\tconst data = await res.json();\n\n\tconst paths = data.daily.data.map((path) => {\n\t\treturn {\n\t\t\tparams: { day: path.time.toString() },\n\t\t};\n\t});\n\n\treturn {\n\t\tpaths,\n\t\tfallback: false,\n\t};\n};\n\nconst DetailedWeather = ({}) => {\n\treturn <div>test</div>;\n};\n\nexport default DetailedWeather;\n"]},"metadata":{},"sourceType":"module"}